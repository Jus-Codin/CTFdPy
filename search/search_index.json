{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CTFdPy","text":"<p>CTFdPy is an API wrapper for CTFd, a Capture The Flag platform.</p> <p>It is designed to make it easier to interact with the CTFd API in Python to streamline the setup process for CTFs.</p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#installation","title":"Installation","text":"<p>TODO</p>"},{"location":"#example-usage","title":"Example Usage","text":"<p>TODO</p>"},{"location":"#documentation","title":"Documentation","text":"<p>These pages go into detail about what you can do with the API</p> <ul> <li>API Reference</li> <li>Unofficial CTFd API Documentation</li> </ul>"},{"location":"#api-coverage","title":"API Coverage","text":"<p>To see what parts of the API are covered, check out the API Coverage page.</p>"},{"location":"coverage/","title":"API Coverage","text":"<ul> <li> Awards<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Brackets<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Challenges<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Comments<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Configs<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Files<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Flags<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Hints<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Notifications<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Pages<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Scoreboard<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Shares<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Statistics<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Submissions<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Tags<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Teams<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Tokens<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Topics<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Unlocks<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> <li> Users<ul> <li> Endpoint Documentation</li> <li> API Implementation</li> </ul> </li> </ul>"},{"location":"ctfdpy/client/","title":"Client","text":""},{"location":"ctfdpy/client/#ctfdpy.client.Client","title":"Client","text":"<p>The main class for interacting with a CTFd instance</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL of the CTFd instance</p> <code>'http://localhost:8080'</code> <code>token</code> <code>str</code> <p>The token to use for authentication, by default None</p> <code>None</code> <code>credentials</code> <code>tuple[str, str]</code> <p>The username and password to use for authentication, by default None</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>token</code> <code>str | None</code> <p>The token used for authentication</p> <code>credentials</code> <code>tuple[str, str] | None</code> <p>The username and password used for authentication</p> <code>url</code> <code>str</code> <p>The URL of the CTFd instance</p> <code>session</code> <code>Client</code> <p>The HTTP session used for requests</p> <p>Methods:</p> Name Description <code>with_token</code> <p>Creates a Client instance with a token</p> <code>with_credentials</code> <p>Creates a Client instance with credentials</p> <code>from_env</code> <p>Creates a Client instance from environment variables</p> <code>login</code> <p>Logs into the CTFd instance</p> Source code in <code>ctfdpy\\client.py</code> <pre><code>class Client:\n    \"\"\"\n    The main class for interacting with a CTFd instance\n\n    Parameters\n    ----------\n    url : str\n        The URL of the CTFd instance\n    token : str, optional\n        The token to use for authentication, by default None\n    credentials : tuple[str, str], optional\n        The username and password to use for authentication, by default None\n\n    Attributes\n    ----------\n    token : str | None\n        The token used for authentication\n    credentials : tuple[str, str] | None\n        The username and password used for authentication\n    url : str\n        The URL of the CTFd instance\n    session : HttpClient\n        The HTTP session used for requests\n\n    Methods\n    -------\n    with_token(url: str, token: str) -&gt; Client\n        Creates a Client instance with a token\n    with_credentials(url: str, credentials: tuple[str, str]) -&gt; Client\n        Creates a Client instance with credentials\n    from_env() -&gt; Client\n        Creates a Client instance from environment variables\n    login()\n        Logs into the CTFd instance\n    \"\"\"\n\n    def __init__(\n        self,\n        url: str = \"http://localhost:8080\",\n        token: str | None = None,\n        credentials: tuple[str, str] | None = None,\n    ) -&gt; None:\n        self.token = token\n        self.credentials = credentials\n\n        if self.token is None and self.credentials is None:\n            raise ValueError(\"Either token or credentials must be provided\")\n\n        self.url = url.rstrip(\"/\")\n\n        self.session = HttpClient()\n        self.session.headers.update({\"Content-Type\": \"application/json\"})\n\n        if token is not None:\n            self.session.headers.update({\"Authorization\": f\"Token {token}\"})\n\n    @classmethod\n    def with_token(cls, url: str, token: str) -&gt; Client:\n        \"\"\"\n        Creates a Client instance with a token\n\n        Parameters\n        ----------\n        url : str\n            The URL of the CTFd instance\n        token : str\n            The token to use for authentication\n\n        Returns\n        -------\n        Client\n            The Client instance\n        \"\"\"\n        return cls(url=url, token=token)\n\n    @classmethod\n    def with_credentials(cls, url: str, credentials: tuple[str, str]) -&gt; Client:\n        \"\"\"\n        Creates a Client instance with credentials\n\n        Parameters\n        ----------\n        url : str\n            The URL of the CTFd instance\n        credentials : tuple[str, str]\n            The username and password to use for authentication\n\n        Returns\n        -------\n        Client\n            The Client instance\n        \"\"\"\n        client = cls(url=url, credentials=credentials)\n        client.login()\n        return client\n\n    @classmethod\n    def from_env(cls) -&gt; Client:\n        \"\"\"\n        Creates a Client instance from environment variables\n\n        Returns\n        -------\n        Client\n            The Client instance\n        \"\"\"\n        url = os.getenv(\"CTFD_URL\")\n        token = os.getenv(\"CTFD_TOKEN\")\n        credentials = (os.getenv(\"CTFD_USERNAME\"), os.getenv(\"CTFD_PASSWORD\"))\n\n        if token is not None:\n            return cls.with_token(url, token)\n        elif credentials is not None:\n            return cls.with_credentials(url, credentials)\n        else:\n            raise ValueError(\"No credentials found in environment\")\n\n    def login(self) -&gt; None:\n        \"\"\"Logs into the CTFd instance\n\n        This should only be used if you do not want to use a token.\n\n        Returns\n        -------\n        None\n\n        Raises\n        ------\n        httpx.HTTPError\n            If the request fails\n        \"\"\"\n        response = self.session.post(\n            f\"{self.url}/login\",\n            data={\"name\": self.credentials[0], \"password\": self.credentials[1]},\n        )\n        response.raise_for_status()\n</code></pre>"},{"location":"ctfdpy/client/#ctfdpy.client.Client.with_token","title":"with_token  <code>classmethod</code>","text":"<pre><code>with_token(url: str, token: str) -&gt; Client\n</code></pre> <p>Creates a Client instance with a token</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL of the CTFd instance</p> required <code>token</code> <code>str</code> <p>The token to use for authentication</p> required <p>Returns:</p> Type Description <code>Client</code> <p>The Client instance</p> Source code in <code>ctfdpy\\client.py</code> <pre><code>@classmethod\ndef with_token(cls, url: str, token: str) -&gt; Client:\n    \"\"\"\n    Creates a Client instance with a token\n\n    Parameters\n    ----------\n    url : str\n        The URL of the CTFd instance\n    token : str\n        The token to use for authentication\n\n    Returns\n    -------\n    Client\n        The Client instance\n    \"\"\"\n    return cls(url=url, token=token)\n</code></pre>"},{"location":"ctfdpy/client/#ctfdpy.client.Client.with_credentials","title":"with_credentials  <code>classmethod</code>","text":"<pre><code>with_credentials(\n    url: str, credentials: tuple[str, str]\n) -&gt; Client\n</code></pre> <p>Creates a Client instance with credentials</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The URL of the CTFd instance</p> required <code>credentials</code> <code>tuple[str, str]</code> <p>The username and password to use for authentication</p> required <p>Returns:</p> Type Description <code>Client</code> <p>The Client instance</p> Source code in <code>ctfdpy\\client.py</code> <pre><code>@classmethod\ndef with_credentials(cls, url: str, credentials: tuple[str, str]) -&gt; Client:\n    \"\"\"\n    Creates a Client instance with credentials\n\n    Parameters\n    ----------\n    url : str\n        The URL of the CTFd instance\n    credentials : tuple[str, str]\n        The username and password to use for authentication\n\n    Returns\n    -------\n    Client\n        The Client instance\n    \"\"\"\n    client = cls(url=url, credentials=credentials)\n    client.login()\n    return client\n</code></pre>"},{"location":"ctfdpy/client/#ctfdpy.client.Client.from_env","title":"from_env  <code>classmethod</code>","text":"<pre><code>from_env() -&gt; Client\n</code></pre> <p>Creates a Client instance from environment variables</p> <p>Returns:</p> Type Description <code>Client</code> <p>The Client instance</p> Source code in <code>ctfdpy\\client.py</code> <pre><code>@classmethod\ndef from_env(cls) -&gt; Client:\n    \"\"\"\n    Creates a Client instance from environment variables\n\n    Returns\n    -------\n    Client\n        The Client instance\n    \"\"\"\n    url = os.getenv(\"CTFD_URL\")\n    token = os.getenv(\"CTFD_TOKEN\")\n    credentials = (os.getenv(\"CTFD_USERNAME\"), os.getenv(\"CTFD_PASSWORD\"))\n\n    if token is not None:\n        return cls.with_token(url, token)\n    elif credentials is not None:\n        return cls.with_credentials(url, credentials)\n    else:\n        raise ValueError(\"No credentials found in environment\")\n</code></pre>"},{"location":"ctfdpy/client/#ctfdpy.client.Client.login","title":"login","text":"<pre><code>login() -&gt; None\n</code></pre> <p>Logs into the CTFd instance</p> <p>This should only be used if you do not want to use a token.</p> <p>Returns:</p> Type Description <code>None</code> <p>Raises:</p> Type Description <code>HTTPError</code> <p>If the request fails</p> Source code in <code>ctfdpy\\client.py</code> <pre><code>def login(self) -&gt; None:\n    \"\"\"Logs into the CTFd instance\n\n    This should only be used if you do not want to use a token.\n\n    Returns\n    -------\n    None\n\n    Raises\n    ------\n    httpx.HTTPError\n        If the request fails\n    \"\"\"\n    response = self.session.post(\n        f\"{self.url}/login\",\n        data={\"name\": self.credentials[0], \"password\": self.credentials[1]},\n    )\n    response.raise_for_status()\n</code></pre>"},{"location":"ctfdpy/exceptions/","title":"Exceptions","text":""},{"location":"ctfdpy/exceptions/#ctfdpy.exceptions--exception-hierarchy","title":"Exception Hierarchy","text":"<ul> <li><code>CTFdpyException</code><ul> <li><code>CTFdpyRequestException</code><ul> <li><code>CTFdpyBadRequestException</code></li> <li><code>CTFdpyUnauthorizedException</code></li> <li><code>CTFdpyNotFoundException</code></li> <li><code>CTFdpyAdminOnlyException</code></li> </ul> </li> <li><code>CTFdpyModelValidationError</code></li> </ul> </li> </ul>"},{"location":"ctfdpy/exceptions/#ctfdpy.exceptions.CTFdpyException","title":"CTFdpyException","text":"<p>             Bases: <code>Exception</code></p> <p>Base exception for CTFdpy</p> Source code in <code>ctfdpy\\exceptions.py</code> <pre><code>class CTFdpyException(Exception):\n    \"\"\"\n    Base exception for CTFdpy\n    \"\"\"\n\n    pass\n</code></pre>"},{"location":"ctfdpy/exceptions/#ctfdpy.exceptions.CTFdpyRequestException","title":"CTFdpyRequestException","text":"<p>             Bases: <code>CTFdpyException</code></p> <p>Exception raised when a request to the CTFd API fails</p> Source code in <code>ctfdpy\\exceptions.py</code> <pre><code>class CTFdpyRequestException(CTFdpyException):\n    \"\"\"\n    Exception raised when a request to the CTFd API fails\n    \"\"\"\n\n    def __init__(self, *args, response: Response | None = None):\n        self.response = response\n        super().__init__(*args)\n</code></pre>"},{"location":"ctfdpy/exceptions/#ctfdpy.exceptions.CTFdpyBadRequestException","title":"CTFdpyBadRequestException","text":"<p>             Bases: <code>CTFdpyRequestException</code></p> <p>Exception raised when a request returns a 400</p> Source code in <code>ctfdpy\\exceptions.py</code> <pre><code>class CTFdpyBadRequestException(CTFdpyRequestException):\n    \"\"\"\n    Exception raised when a request returns a 400\n    \"\"\"\n\n    pass\n</code></pre>"},{"location":"ctfdpy/exceptions/#ctfdpy.exceptions.CTFdpyUnauthorizedException","title":"CTFdpyUnauthorizedException","text":"<p>             Bases: <code>CTFdpyRequestException</code></p> <p>Exception raised when a request returns a 403</p> Source code in <code>ctfdpy\\exceptions.py</code> <pre><code>class CTFdpyUnauthorizedException(CTFdpyRequestException):\n    \"\"\"\n    Exception raised when a request returns a 403\n    \"\"\"\n\n    pass\n</code></pre>"},{"location":"ctfdpy/exceptions/#ctfdpy.exceptions.CTFdpyNotFoundException","title":"CTFdpyNotFoundException","text":"<p>             Bases: <code>CTFdpyRequestException</code></p> <p>Exception raised when a resource is not found</p> Source code in <code>ctfdpy\\exceptions.py</code> <pre><code>class CTFdpyNotFoundException(CTFdpyRequestException):\n    \"\"\"\n    Exception raised when a resource is not found\n    \"\"\"\n\n    pass\n</code></pre>"},{"location":"ctfdpy/exceptions/#ctfdpy.exceptions.CTFdpyAdminOnlyException","title":"CTFdpyAdminOnlyException","text":"<p>             Bases: <code>CTFdpyRequestException</code></p> <p>Exception raised when a request requires the user to be an admin</p> Source code in <code>ctfdpy\\exceptions.py</code> <pre><code>class CTFdpyAdminOnlyException(CTFdpyRequestException):\n    \"\"\"\n    Exception raised when a request requires the user to be an admin\n    \"\"\"\n\n    pass\n</code></pre>"},{"location":"ctfdpy/exceptions/#ctfdpy.exceptions.CTFdpyModelValidationError","title":"CTFdpyModelValidationError","text":"<p>             Bases: <code>CTFdpyException</code></p> <p>Exception raised when a model fails validation</p> Source code in <code>ctfdpy\\exceptions.py</code> <pre><code>class CTFdpyModelValidationError(CTFdpyException):\n    \"\"\"\n    Exception raised when a model fails validation\n    \"\"\"\n\n    pass\n</code></pre>"},{"location":"ctfdpy/api/api/","title":"API","text":""},{"location":"ctfdpy/api/api/#ctfdpy.api.api.APIResponse","title":"APIResponse","text":"<p>             Bases: <code>TypedDict</code></p> <p>API response structure.</p> Source code in <code>ctfdpy\\api\\api.py</code> <pre><code>class APIResponse(TypedDict):\n    \"\"\"API response structure.\"\"\"\n\n    data: Any | None\n    success: bool\n    errors: list[str] | dict[str, str] | None\n    message: str | None\n</code></pre>"},{"location":"ctfdpy/api/api/#ctfdpy.api.api.API","title":"API","text":"<p>The base class for interacting with an API endpoint</p> <p>Parameters:</p> Name Type Description Default <code>client</code> <code>Client</code> <p>The client to use for requests</p> required <p>Attributes:</p> Name Type Description <code>client</code> <code>Client</code> <p>The client used for requests</p> <code>url</code> <code>str</code> <p>The URL of the CTFd instance</p> <code>session</code> <code>HttpClient</code> <p>The HTTP session used for requests</p> <p>Methods:</p> Name Description <code>handle_response</code> <p>Handles an API response</p> <code>_get</code> <p>Sends a GET request to an endpoint</p> <code>_post</code> <p>Sends a POST request to an endpoint</p> <code>_patch</code> <p>Sends a PATCH request to an endpoint</p> <code>_delete</code> <p>Sends a DELETE request to an endpoint</p> Source code in <code>ctfdpy\\api\\api.py</code> <pre><code>class API:\n    \"\"\"\n    The base class for interacting with an API endpoint\n\n    Parameters\n    ----------\n    client : ctfdy.Client\n        The client to use for requests\n\n    Attributes\n    ----------\n    client : ctfdpy.Client\n        The client used for requests\n    url : str\n        The URL of the CTFd instance\n    session : httpx.HttpClient\n        The HTTP session used for requests\n\n    Methods\n    -------\n    handle_response(response: httpx.Response) -&gt; APIResponse\n        Handles an API response\n    _get(endpoint: str, **kwargs) -&gt; APIResponse\n        Sends a GET request to an endpoint\n    _post(endpoint: str, json: dict[str, Any], **kwargs) -&gt; APIResponse\n        Sends a POST request to an endpoint\n    _patch(endpoint: str, json: dict[str, Any], **kwargs) -&gt; APIResponse\n        Sends a PATCH request to an endpoint\n    _delete(endpoint: str, **kwargs) -&gt; APIResponse\n        Sends a DELETE request to an endpoint\n    \"\"\"\n\n    def __init__(self, client: Client):\n        self.client = client\n        self.url = client.url\n        self.session = client.session\n\n    def handle_response(self, response: Response) -&gt; APIResponse:\n        \"\"\"\n        Handles an API response\n\n        Parameters\n        ----------\n        response : httpx.Response\n            The response to handle\n\n        Returns\n        -------\n        APIResponse\n            The handled response\n\n        Raises\n        ------\n        CTFdpyBadRequestException\n            If the response status code is 400\n        CTFdpyUnauthorizedException\n            If the response status code is 403\n        CTFdpyNotFoundException\n            If the response status code is 404\n        CTFdpyRequestException\n            If the response status code is not 2xx, 400, 403, or 404\n        \"\"\"\n        match response.status_code:\n\n            case code if 200 &lt;= code &lt; 300:\n                pass\n\n            case 400:\n                raise CTFdpyBadRequestException(response=response)\n\n            case 403:\n                raise CTFdpyUnauthorizedException(response=response)\n\n            case 404:\n                raise CTFdpyNotFoundException(response=response)\n\n            case _:\n                raise CTFdpyRequestException(response=response)\n\n        data = response.json()\n        if not data[\"success\"]:\n            raise Exception(data.get(\"errors\") or data[\"message\"])\n\n        return data\n\n    def _get(self, endpoint: str, **kwargs) -&gt; APIResponse:\n        response = self.session.get(self.url + endpoint, **kwargs)\n        return self.handle_response(response)\n\n    def _post(self, endpoint: str, json: dict[str, Any], **kwargs) -&gt; APIResponse:\n        response = self.session.post(self.url + endpoint, json=json, **kwargs)\n        return self.handle_response(response)\n\n    def _patch(self, endpoint: str, json: dict[str, Any], **kwargs) -&gt; APIResponse:\n        response = self.session.patch(self.url + endpoint, json=json, **kwargs)\n        return self.handle_response(response)\n\n    def _delete(self, endpoint: str, **kwargs) -&gt; APIResponse:\n        response = self.session.delete(self.url + endpoint, **kwargs)\n        return self.handle_response(response)\n</code></pre>"},{"location":"ctfdpy/api/api/#ctfdpy.api.api.API.handle_response","title":"handle_response","text":"<pre><code>handle_response(response: Response) -&gt; APIResponse\n</code></pre> <p>Handles an API response</p> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>Response</code> <p>The response to handle</p> required <p>Returns:</p> Type Description <code>APIResponse</code> <p>The handled response</p> <p>Raises:</p> Type Description <code>CTFdpyBadRequestException</code> <p>If the response status code is 400</p> <code>CTFdpyUnauthorizedException</code> <p>If the response status code is 403</p> <code>CTFdpyNotFoundException</code> <p>If the response status code is 404</p> <code>CTFdpyRequestException</code> <p>If the response status code is not 2xx, 400, 403, or 404</p> Source code in <code>ctfdpy\\api\\api.py</code> <pre><code>def handle_response(self, response: Response) -&gt; APIResponse:\n    \"\"\"\n    Handles an API response\n\n    Parameters\n    ----------\n    response : httpx.Response\n        The response to handle\n\n    Returns\n    -------\n    APIResponse\n        The handled response\n\n    Raises\n    ------\n    CTFdpyBadRequestException\n        If the response status code is 400\n    CTFdpyUnauthorizedException\n        If the response status code is 403\n    CTFdpyNotFoundException\n        If the response status code is 404\n    CTFdpyRequestException\n        If the response status code is not 2xx, 400, 403, or 404\n    \"\"\"\n    match response.status_code:\n\n        case code if 200 &lt;= code &lt; 300:\n            pass\n\n        case 400:\n            raise CTFdpyBadRequestException(response=response)\n\n        case 403:\n            raise CTFdpyUnauthorizedException(response=response)\n\n        case 404:\n            raise CTFdpyNotFoundException(response=response)\n\n        case _:\n            raise CTFdpyRequestException(response=response)\n\n    data = response.json()\n    if not data[\"success\"]:\n        raise Exception(data.get(\"errors\") or data[\"message\"])\n\n    return data\n</code></pre>"},{"location":"ctfdpy/api/files/","title":"Files","text":""},{"location":"ctfdpy/api/files/#ctfdpy.api.files.FilesAPI","title":"FilesAPI","text":"<p>             Bases: <code>API</code></p> <p>Class for interacting with the <code>/api/v1/files</code> endpoint</p> <p>Parameters:</p> Name Type Description Default <code>client</code> <code>Client</code> <p>The client to use for requests</p> required <p>Attributes:</p> Name Type Description <code>client</code> <code>Client</code> <p>The client used for requests</p> <code>url</code> <code>str</code> <p>The URL of the CTFd instance</p> <code>session</code> <code>HttpClient</code> <p>The HTTP session used for requests</p> <p>Methods:</p> Name Description <code>list</code> <p>Method to list all files with optional filtering</p> <code>create</code> <p>Method to create files</p> <code>get</code> <p>Method to get a file by ID</p> <code>delete</code> <p>Method to delete a file by ID</p> Source code in <code>ctfdpy\\api\\files.py</code> <pre><code>class FilesAPI(API):\n    \"\"\"\n    Class for interacting with the `/api/v1/files` endpoint\n\n    Parameters\n    ----------\n    client : ctfdy.Client\n        The client to use for requests\n\n    Attributes\n    ----------\n    client : ctfdpy.Client\n        The client used for requests\n    url : str\n        The URL of the CTFd instance\n    session : httpx.HttpClient\n        The HTTP session used for requests\n\n    Methods\n    -------\n    list(type: FileType | None = None, location: str | None = None, q: str | None = None, field: Literal[\"type\", \"location\"] | None = None) -&gt; list[File]\n        Method to list all files with optional filtering\n    create(payload: CreateFilePayload | None = None, files: list[MultipartFileTypes] | None = None, file_paths: list[str | os.PathLike] | None = None, type: FileType | None = None, challenge_id: int | None = None, challenge: int | None = None, page_id: int | None = None, page: int | None = None, location: str | None = None) -&gt; list[File]\n        Method to create files\n    get(file_id: int) -&gt; File\n        Method to get a file by ID\n    delete(file_id: int) -&gt; bool\n        Method to delete a file by ID\n    \"\"\"\n\n    @admin_only\n    def list(\n        self,\n        *,\n        type: FileType | None = None,\n        location: str | None = None,\n        q: str | None = None,\n        field: Literal[\"type\", \"location\"] | None = None,\n    ) -&gt; list[StandardFile | ChallengeFile | PageFile]:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        Method to list all files with optional filtering\n\n        Parameters\n        ----------\n        type : FileType | None\n            The type of the file to filter by, by default None\n        location : str | None\n            The location of the file to filter by, by default None\n        q : str | None\n            The query string to search for, by default None\n        field : Literal[\"type\", \"location\"] | None\n            The field to search in, by default None\n\n        Returns\n        -------\n        list[StandardFile | ChallengeFile | PageFile]\n            A list of files\n\n        Raises\n        ------\n        ValueError\n            If `q` is provided without `field` or vice versa\n        CTFdpyBadRequestException\n            An error occurred processing the provided or stored data\n        CTFdpyUnauthorizedException\n            The client is not authorized to access the endpoint\n\n        Examples\n        --------\n        Get all files\n        ```python\n        files = client.files.list()\n        ```\n\n        Get all challenge files\n        ```python\n        files = client.files.list(type=FileType.CHALLENGE)\n        ```\n        \"\"\"\n        # Check that q and field are both provided or neither are provided\n        if q is None != field is None:\n            raise ValueError(\"Both q and field must be provided\")\n\n        params = {}\n        if type is not None:\n            params[\"type\"] = type\n        if location is not None:\n            params[\"location\"] = location\n        if q is not None:\n            params[\"q\"] = q\n            params[\"field\"] = field\n\n        result = self._get(\"/api/v1/files\", params=params)\n\n        return [file_adapter.validate_python(file) for file in result[\"data\"]]\n\n    @overload\n    def create(\n        self, *, payload: CreateFilePayload\n    ) -&gt; list[StandardFile | ChallengeFile | PageFile]: ...\n\n    @overload\n    def create(\n        self,\n        *,\n        files: list[MultipartFileTypes] | None = None,\n        file_paths: list[str | os.PathLike] | None = None,\n        type: FileType = FileType.STANDARD,\n        challenge_id: int | None = None,\n        challenge: int | None = None,\n        page_id: int | None = None,\n        page: int | None = None,\n        location: str | None = None,\n    ) -&gt; list[StandardFile | ChallengeFile | PageFile]: ...\n\n    @admin_only\n    def create(\n        self,\n        *,\n        payload: CreateFilePayload | None = None,\n        files: list[MultipartFileTypes] | None = None,\n        file_paths: list[str | os.PathLike] | None = None,\n        type: FileType | None = None,\n        challenge_id: int | None = None,\n        challenge: int | None = None,\n        page_id: int | None = None,\n        page: int | None = None,\n        location: str | None = None,\n    ) -&gt; list[StandardFile | ChallengeFile | PageFile]:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        Method to create files\n\n        Parameters\n        ----------\n        payload : CreateFilePayload\n            The payload to create the files with. If this is provided, no other parameters should be provided\n        files : list[MultipartFileTypes]\n            The files to upload. This can either be a `#!python FileContent` type or a tuple of length between 2 and 4\n            in the format `(filename, file, content_type, headers)`.\n        file_paths : list[str | os.PathLike] | None\n            The paths to the files to upload, by default None\n        type : FileType | None\n            The type of the files, by default None\n        challenge_id : int | None\n            The ID of the challenge associated with the files, by default None\n        challenge : int | None\n            Alias for `challenge_id`, by default None\n        page_id : int | None\n            The ID of the page associated with the files, by default None\n        page : int | None\n            Alias for `page_id`, by default None\n        location : str | None\n            The location to upload the files to, by default None\n\n        Returns\n        -------\n        list[StandardFile | ChallengeFile | PageFile]\n            A list of files created\n\n        Raises\n        ------\n        ValueError\n            If no files are provided\n        FileNotFoundError\n            If a provided file path does not exist\n        CTFdpyBadRequestException\n            An error occurred processing the provided or stored data\n        CTFdpyUnauthorizedException\n            The client is not authorized to access the endpoint\n        CTFdpyModelValidationError\n            The provided payload is invalid\n\n        Examples\n        --------\n        Create a file for a challenge with ID of `1`\n        ```python\n        # Using `CreateFilePayload`\n\n        payload = CreateFilePayload(\n            files=[(\"file.txt\", open(\"file.txt\", \"rb\"))],\n            type=FileType.CHALLENGE,\n            challenge_id=1\n        )\n        file = client.files.create(payload=payload)\n\n        # Or using file content\n\n        file = client.files.create(\n            files=[(\"file.txt\", open(\"file.txt\", \"rb\"))],\n            type=FileType.CHALLENGE,\n            challenge_id=1\n        )\n\n        # Or using file paths\n\n        file = client.files.create(\n            file_paths=[Path(\"file.txt\")],\n            type=FileType.CHALLENGE,\n            challenge_id=1\n        )\n\n        ```\n        \"\"\"\n        if payload is None:\n            files = files or []\n\n            if file_paths is not None:\n                for file_path in file_paths:\n                    file_path = Path(file_path)\n                    if not file_path.exists():\n                        raise FileNotFoundError(f\"File not found: {file_path}\")\n                    files.append((file_path.name, file_path.open(\"rb\")))\n\n            if len(files) == 0:\n                raise ValueError(\"At least one file must be provided\")\n\n            try:\n                payload = CreateFilePayload(\n                    files=files,\n                    type=type,\n                    challenge_id=challenge_id or challenge,\n                    page_id=page_id or page,\n                    location=location,\n                )\n            except ValidationError as e:\n                raise CTFdpyModelValidationError(e.errors())\n\n        result = self._post(\n            \"/api/v1/files\",\n            headers={\"Content-Type\": \"multipart/form-data\"},\n            **payload.to_payload(),  # We need to unpack the payload\n        )\n\n        return [file_adapter.validate_python(file) for file in result[\"data\"]]\n\n    @admin_only\n    def get(self, file_id: int) -&gt; StandardFile | ChallengeFile | PageFile:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        Method to get a file by ID\n\n        Parameters\n        ----------\n        file_id : int\n            The ID of the file to get\n\n        Returns\n        -------\n        StandardFile | ChallengeFile | PageFile\n            The file\n\n        Raises\n        ------\n        CTFdpyNotFoundException\n            The file does not exist\n        CTFdpyUnauthorizedException\n            The client is not authorized to access the endpoint\n\n        Examples\n        --------\n        Get a file\n        ```python\n        file = client.files.get(1)\n        ```\n        \"\"\"\n        result = self._get(f\"/api/v1/files/{file_id}\")\n\n        return file_adapter.validate_python(result[\"data\"])\n\n    @admin_only\n    def delete(self, file_id: int) -&gt; bool:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        Method to delete a file by ID\n\n        Parameters\n        ----------\n        file_id : int\n            The ID of the file to delete\n\n        Returns\n        -------\n        bool\n            Whether the file was deleted\n\n        Raises\n        ------\n        CTFdpyNotFoundException\n            The file does not exist\n        CTFdpyUnauthorizedException\n            The client is not authorized to access the endpoint\n\n        Examples\n        --------\n        Delete a file\n        ```python\n        client.files.delete(1)\n        ```\n        \"\"\"\n        result = self._delete(f\"/api/v1/files/{file_id}\")\n\n        return result[\"success\"]\n</code></pre>"},{"location":"ctfdpy/api/files/#ctfdpy.api.files.FilesAPI.list","title":"list","text":"<pre><code>list(\n    *,\n    type: FileType | None = None,\n    location: str | None = None,\n    q: str | None = None,\n    field: Literal[\"type\", \"location\"] | None = None\n) -&gt; list[StandardFile | ChallengeFile | PageFile]\n</code></pre> <p>This method is only available to admins</p> <p>Method to list all files with optional filtering</p> <p>Parameters:</p> Name Type Description Default <code>type</code> <code>FileType | None</code> <p>The type of the file to filter by, by default None</p> <code>None</code> <code>location</code> <code>str | None</code> <p>The location of the file to filter by, by default None</p> <code>None</code> <code>q</code> <code>str | None</code> <p>The query string to search for, by default None</p> <code>None</code> <code>field</code> <code>Literal['type', 'location'] | None</code> <p>The field to search in, by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>list[StandardFile | ChallengeFile | PageFile]</code> <p>A list of files</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If <code>q</code> is provided without <code>field</code> or vice versa</p> <code>CTFdpyBadRequestException</code> <p>An error occurred processing the provided or stored data</p> <code>CTFdpyUnauthorizedException</code> <p>The client is not authorized to access the endpoint</p> <p>Examples:</p> <p>Get all files <pre><code>files = client.files.list()\n</code></pre></p> <p>Get all challenge files <pre><code>files = client.files.list(type=FileType.CHALLENGE)\n</code></pre></p> Source code in <code>ctfdpy\\api\\files.py</code> <pre><code>@admin_only\ndef list(\n    self,\n    *,\n    type: FileType | None = None,\n    location: str | None = None,\n    q: str | None = None,\n    field: Literal[\"type\", \"location\"] | None = None,\n) -&gt; list[StandardFile | ChallengeFile | PageFile]:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    Method to list all files with optional filtering\n\n    Parameters\n    ----------\n    type : FileType | None\n        The type of the file to filter by, by default None\n    location : str | None\n        The location of the file to filter by, by default None\n    q : str | None\n        The query string to search for, by default None\n    field : Literal[\"type\", \"location\"] | None\n        The field to search in, by default None\n\n    Returns\n    -------\n    list[StandardFile | ChallengeFile | PageFile]\n        A list of files\n\n    Raises\n    ------\n    ValueError\n        If `q` is provided without `field` or vice versa\n    CTFdpyBadRequestException\n        An error occurred processing the provided or stored data\n    CTFdpyUnauthorizedException\n        The client is not authorized to access the endpoint\n\n    Examples\n    --------\n    Get all files\n    ```python\n    files = client.files.list()\n    ```\n\n    Get all challenge files\n    ```python\n    files = client.files.list(type=FileType.CHALLENGE)\n    ```\n    \"\"\"\n    # Check that q and field are both provided or neither are provided\n    if q is None != field is None:\n        raise ValueError(\"Both q and field must be provided\")\n\n    params = {}\n    if type is not None:\n        params[\"type\"] = type\n    if location is not None:\n        params[\"location\"] = location\n    if q is not None:\n        params[\"q\"] = q\n        params[\"field\"] = field\n\n    result = self._get(\"/api/v1/files\", params=params)\n\n    return [file_adapter.validate_python(file) for file in result[\"data\"]]\n</code></pre>"},{"location":"ctfdpy/api/files/#ctfdpy.api.files.FilesAPI.create","title":"create","text":"<pre><code>create(\n    *,\n    payload: CreateFilePayload | None = None,\n    files: list[MultipartFileTypes] | None = None,\n    file_paths: list[str | PathLike] | None = None,\n    type: FileType | None = None,\n    challenge_id: int | None = None,\n    challenge: int | None = None,\n    page_id: int | None = None,\n    page: int | None = None,\n    location: str | None = None\n) -&gt; list[StandardFile | ChallengeFile | PageFile]\n</code></pre> <p>This method is only available to admins</p> <p>Method to create files</p> <p>Parameters:</p> Name Type Description Default <code>payload</code> <code>CreateFilePayload</code> <p>The payload to create the files with. If this is provided, no other parameters should be provided</p> <code>None</code> <code>files</code> <code>list[MultipartFileTypes]</code> <p>The files to upload. This can either be a <code>FileContent</code> type or a tuple of length between 2 and 4 in the format <code>(filename, file, content_type, headers)</code>.</p> <code>None</code> <code>file_paths</code> <code>list[str | PathLike] | None</code> <p>The paths to the files to upload, by default None</p> <code>None</code> <code>type</code> <code>FileType | None</code> <p>The type of the files, by default None</p> <code>None</code> <code>challenge_id</code> <code>int | None</code> <p>The ID of the challenge associated with the files, by default None</p> <code>None</code> <code>challenge</code> <code>int | None</code> <p>Alias for <code>challenge_id</code>, by default None</p> <code>None</code> <code>page_id</code> <code>int | None</code> <p>The ID of the page associated with the files, by default None</p> <code>None</code> <code>page</code> <code>int | None</code> <p>Alias for <code>page_id</code>, by default None</p> <code>None</code> <code>location</code> <code>str | None</code> <p>The location to upload the files to, by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>list[StandardFile | ChallengeFile | PageFile]</code> <p>A list of files created</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If no files are provided</p> <code>FileNotFoundError</code> <p>If a provided file path does not exist</p> <code>CTFdpyBadRequestException</code> <p>An error occurred processing the provided or stored data</p> <code>CTFdpyUnauthorizedException</code> <p>The client is not authorized to access the endpoint</p> <code>CTFdpyModelValidationError</code> <p>The provided payload is invalid</p> <p>Examples:</p> <p>Create a file for a challenge with ID of <code>1</code> <pre><code># Using `CreateFilePayload`\n\npayload = CreateFilePayload(\n    files=[(\"file.txt\", open(\"file.txt\", \"rb\"))],\n    type=FileType.CHALLENGE,\n    challenge_id=1\n)\nfile = client.files.create(payload=payload)\n\n# Or using file content\n\nfile = client.files.create(\n    files=[(\"file.txt\", open(\"file.txt\", \"rb\"))],\n    type=FileType.CHALLENGE,\n    challenge_id=1\n)\n\n# Or using file paths\n\nfile = client.files.create(\n    file_paths=[Path(\"file.txt\")],\n    type=FileType.CHALLENGE,\n    challenge_id=1\n)\n</code></pre></p> Source code in <code>ctfdpy\\api\\files.py</code> <pre><code>@admin_only\ndef create(\n    self,\n    *,\n    payload: CreateFilePayload | None = None,\n    files: list[MultipartFileTypes] | None = None,\n    file_paths: list[str | os.PathLike] | None = None,\n    type: FileType | None = None,\n    challenge_id: int | None = None,\n    challenge: int | None = None,\n    page_id: int | None = None,\n    page: int | None = None,\n    location: str | None = None,\n) -&gt; list[StandardFile | ChallengeFile | PageFile]:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    Method to create files\n\n    Parameters\n    ----------\n    payload : CreateFilePayload\n        The payload to create the files with. If this is provided, no other parameters should be provided\n    files : list[MultipartFileTypes]\n        The files to upload. This can either be a `#!python FileContent` type or a tuple of length between 2 and 4\n        in the format `(filename, file, content_type, headers)`.\n    file_paths : list[str | os.PathLike] | None\n        The paths to the files to upload, by default None\n    type : FileType | None\n        The type of the files, by default None\n    challenge_id : int | None\n        The ID of the challenge associated with the files, by default None\n    challenge : int | None\n        Alias for `challenge_id`, by default None\n    page_id : int | None\n        The ID of the page associated with the files, by default None\n    page : int | None\n        Alias for `page_id`, by default None\n    location : str | None\n        The location to upload the files to, by default None\n\n    Returns\n    -------\n    list[StandardFile | ChallengeFile | PageFile]\n        A list of files created\n\n    Raises\n    ------\n    ValueError\n        If no files are provided\n    FileNotFoundError\n        If a provided file path does not exist\n    CTFdpyBadRequestException\n        An error occurred processing the provided or stored data\n    CTFdpyUnauthorizedException\n        The client is not authorized to access the endpoint\n    CTFdpyModelValidationError\n        The provided payload is invalid\n\n    Examples\n    --------\n    Create a file for a challenge with ID of `1`\n    ```python\n    # Using `CreateFilePayload`\n\n    payload = CreateFilePayload(\n        files=[(\"file.txt\", open(\"file.txt\", \"rb\"))],\n        type=FileType.CHALLENGE,\n        challenge_id=1\n    )\n    file = client.files.create(payload=payload)\n\n    # Or using file content\n\n    file = client.files.create(\n        files=[(\"file.txt\", open(\"file.txt\", \"rb\"))],\n        type=FileType.CHALLENGE,\n        challenge_id=1\n    )\n\n    # Or using file paths\n\n    file = client.files.create(\n        file_paths=[Path(\"file.txt\")],\n        type=FileType.CHALLENGE,\n        challenge_id=1\n    )\n\n    ```\n    \"\"\"\n    if payload is None:\n        files = files or []\n\n        if file_paths is not None:\n            for file_path in file_paths:\n                file_path = Path(file_path)\n                if not file_path.exists():\n                    raise FileNotFoundError(f\"File not found: {file_path}\")\n                files.append((file_path.name, file_path.open(\"rb\")))\n\n        if len(files) == 0:\n            raise ValueError(\"At least one file must be provided\")\n\n        try:\n            payload = CreateFilePayload(\n                files=files,\n                type=type,\n                challenge_id=challenge_id or challenge,\n                page_id=page_id or page,\n                location=location,\n            )\n        except ValidationError as e:\n            raise CTFdpyModelValidationError(e.errors())\n\n    result = self._post(\n        \"/api/v1/files\",\n        headers={\"Content-Type\": \"multipart/form-data\"},\n        **payload.to_payload(),  # We need to unpack the payload\n    )\n\n    return [file_adapter.validate_python(file) for file in result[\"data\"]]\n</code></pre>"},{"location":"ctfdpy/api/files/#ctfdpy.api.files.FilesAPI.get","title":"get","text":"<pre><code>get(\n    file_id: int,\n) -&gt; StandardFile | ChallengeFile | PageFile\n</code></pre> <p>This method is only available to admins</p> <p>Method to get a file by ID</p> <p>Parameters:</p> Name Type Description Default <code>file_id</code> <code>int</code> <p>The ID of the file to get</p> required <p>Returns:</p> Type Description <code>StandardFile | ChallengeFile | PageFile</code> <p>The file</p> <p>Raises:</p> Type Description <code>CTFdpyNotFoundException</code> <p>The file does not exist</p> <code>CTFdpyUnauthorizedException</code> <p>The client is not authorized to access the endpoint</p> <p>Examples:</p> <p>Get a file <pre><code>file = client.files.get(1)\n</code></pre></p> Source code in <code>ctfdpy\\api\\files.py</code> <pre><code>@admin_only\ndef get(self, file_id: int) -&gt; StandardFile | ChallengeFile | PageFile:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    Method to get a file by ID\n\n    Parameters\n    ----------\n    file_id : int\n        The ID of the file to get\n\n    Returns\n    -------\n    StandardFile | ChallengeFile | PageFile\n        The file\n\n    Raises\n    ------\n    CTFdpyNotFoundException\n        The file does not exist\n    CTFdpyUnauthorizedException\n        The client is not authorized to access the endpoint\n\n    Examples\n    --------\n    Get a file\n    ```python\n    file = client.files.get(1)\n    ```\n    \"\"\"\n    result = self._get(f\"/api/v1/files/{file_id}\")\n\n    return file_adapter.validate_python(result[\"data\"])\n</code></pre>"},{"location":"ctfdpy/api/files/#ctfdpy.api.files.FilesAPI.delete","title":"delete","text":"<pre><code>delete(file_id: int) -&gt; bool\n</code></pre> <p>This method is only available to admins</p> <p>Method to delete a file by ID</p> <p>Parameters:</p> Name Type Description Default <code>file_id</code> <code>int</code> <p>The ID of the file to delete</p> required <p>Returns:</p> Type Description <code>bool</code> <p>Whether the file was deleted</p> <p>Raises:</p> Type Description <code>CTFdpyNotFoundException</code> <p>The file does not exist</p> <code>CTFdpyUnauthorizedException</code> <p>The client is not authorized to access the endpoint</p> <p>Examples:</p> <p>Delete a file <pre><code>client.files.delete(1)\n</code></pre></p> Source code in <code>ctfdpy\\api\\files.py</code> <pre><code>@admin_only\ndef delete(self, file_id: int) -&gt; bool:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    Method to delete a file by ID\n\n    Parameters\n    ----------\n    file_id : int\n        The ID of the file to delete\n\n    Returns\n    -------\n    bool\n        Whether the file was deleted\n\n    Raises\n    ------\n    CTFdpyNotFoundException\n        The file does not exist\n    CTFdpyUnauthorizedException\n        The client is not authorized to access the endpoint\n\n    Examples\n    --------\n    Delete a file\n    ```python\n    client.files.delete(1)\n    ```\n    \"\"\"\n    result = self._delete(f\"/api/v1/files/{file_id}\")\n\n    return result[\"success\"]\n</code></pre>"},{"location":"ctfdpy/api/hints/","title":"Hints","text":""},{"location":"ctfdpy/api/hints/#ctfdpy.api.hints.HintsAPI","title":"HintsAPI","text":"<p>             Bases: <code>API</code></p> <p>Class for interacting with the <code>/api/v1/hints</code> endpoint</p> <p>Parameters:</p> Name Type Description Default <code>client</code> <code>Client</code> <p>The client to use for requests</p> required <p>Attributes:</p> Name Type Description <code>client</code> <code>Client</code> <p>The client used for requests</p> <code>url</code> <code>str</code> <p>The URL of the CTFd instance</p> <code>session</code> <code>HttpClient</code> <p>The HTTP session used for requests</p> Source code in <code>ctfdpy\\api\\hints.py</code> <pre><code>class HintsAPI(API):\n    \"\"\"\n    Class for interacting with the `/api/v1/hints` endpoint\n\n    Parameters\n    ----------\n    client : ctfdy.Client\n        The client to use for requests\n\n    Attributes\n    ----------\n    client : ctfdpy.Client\n        The client used for requests\n    url : str\n        The URL of the CTFd instance\n    session : httpx.HttpClient\n        The HTTP session used for requests\n    \"\"\"\n\n    @admin_only\n    def list(\n        self,\n        *,\n        type: HintType | None = None,\n        challenge_id: int | None = None,\n        content: str | None = None,\n        cost: int | None = None,\n        q: str | None = None,\n        field: Literal[\"type\", \"content\"] | None = None,\n    ) -&gt; list[LockedHint]:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        !!! warning \"This method returns limited information for hints\"\n\n        Method to list all hints with optional filtering\n\n        Parameters\n        ----------\n        type : HintType | None\n            The type of the hint\n        challenge_id : int | None\n            The ID of the challenge associated with the hint\n        content : str | None\n            The content of the hint\n        cost : int | None\n            The cost of the hint\n        q : str | None\n            The query string to search for\n        field : Literal[\"type\", \"content\"] | None\n            The field to search in\n\n        Returns\n        -------\n        list[LockedHint]\n            The list of hints\n        \"\"\"\n        # Check that q and field are both provided or neither are provided\n        if q is None != field is None:\n            raise ValueError(\n                \"Both q and field must be provided or neither must be provided\"\n            )\n\n        params = {}\n        if type is not None:\n            params[\"type\"] = type\n        if challenge_id is not None:\n            params[\"challenge_id\"] = challenge_id\n        if content is not None:\n            params[\"content\"] = content\n        if cost is not None:\n            params[\"cost\"] = cost\n        if q is not None:\n            params[\"q\"] = q\n            params[\"field\"] = field\n\n        result = self._get(\"/api/v1/hints\", params=params)\n\n        return [LockedHint.model_validate(hint) for hint in result[\"data\"]]\n\n    @overload\n    def create(self, *, payload: CreateHintPayload) -&gt; Hint: ...\n\n    @overload\n    def create(\n        self,\n        *,\n        challenge_id: int,\n        content: str,\n        cost: int,\n        type: HintType = HintType.STANDARD,\n        requirements: dict[str, str] | None = None,\n    ) -&gt; Hint: ...\n\n    @admin_only\n    def create(\n        self,\n        *,\n        payload: CreateHintPayload | None = None,\n        challenge_id: int | None = None,\n        content: str | None = None,\n        cost: int | None = None,\n        type: HintType = HintType.STANDARD,\n        requirements: dict[str, str] | None = None,\n    ) -&gt; Hint:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        Method to create a hint\n\n        Parameters\n        ----------\n        payload : CreateHintPayload\n            The payload for creating a hint. If this is provided, no other parameters should be provided\n        challenge_id : int\n            The ID of the challenge associated with the hint\n        content : str\n            The content of the hint\n        cost : int\n            The cost of the hint\n        type : HintType\n            The type of the hint\n        requirements : dict[str, str]\n            The requirements of the hint\n\n        Returns\n        -------\n        Hint\n            The created hint\n        \"\"\"\n        if payload is None:\n            try:\n                payload = CreateHintPayload(\n                    challenge_id=challenge_id,\n                    content=content,\n                    cost=cost,\n                    type=type,\n                    requirements=requirements,\n                )\n            except ValidationError as e:\n                raise CTFdpyModelValidationError(e.errors())\n\n        result = self._post(\"/api/v1/hints\", json=payload.to_payload())\n\n        return Hint.model_validate(result)\n\n    @admin_only\n    def get(self, hint_id: int) -&gt; Hint | LockedHint | UnlockedHint:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        Gets a hint by ID\n\n        Parameters\n        ----------\n        hint_id : int\n            The ID of the hint\n\n        Returns\n        -------\n        LockedHint\n            The hint\n        \"\"\"\n        result = self._get(f\"/api/v1/hints/{hint_id}\")\n\n        return hint_adapter.validate_python(result[\"data\"])\n\n    @overload\n    def update(self, hint_id: int, *, payload: UpdateHintPayload) -&gt; Hint: ...\n\n    @overload\n    def update(\n        self,\n        hint_id: int,\n        *,\n        challenge_id: int,\n        content: str,\n        cost: int,\n        type: HintType,\n        requirements: dict[str, str] | None,\n    ) -&gt; Hint: ...\n\n    @admin_only\n    def update(\n        self,\n        hint_id: int,\n        *,\n        payload: UpdateHintPayload | None = None,\n        **kwargs,\n    ) -&gt; Hint:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        Method to update a hint\n\n        Parameters\n        ----------\n        hint_id : int\n            The ID of the hint\n        payload : UpdateHintPayload\n            The payload for updating a hint. If this is provided, no other parameters should be provided\n        challenge_id : int\n            The ID of the challenge associated with the hint\n        content : str\n            The content of the hint\n        cost : int\n            The cost of the hint\n        type : HintType\n            The type of the hint\n        requirements : dict[str, str] | None\n            The requirements of the hint\n\n        Returns\n        -------\n        Hint\n            The updated hint\n        \"\"\"\n        if payload is None:\n            try:\n                payload = UpdateHintPayload(**kwargs)\n            except ValidationError as e:\n                raise CTFdpyModelValidationError(e.errors())\n\n        result = self._patch(f\"/api/v1/hints/{hint_id}\", json=payload.to_payload())\n\n        return Hint.model_validate(result)\n\n    @admin_only\n    def delete(self, hint_id: int) -&gt; bool:\n        \"\"\"\n        !!! note \"This method is only available to admins\"\n\n        Method to delete a hint\n\n        Parameters\n        ----------\n        hint_id : int\n            The ID of the hint\n\n        Returns\n        -------\n        bool\n            Whether the hint was deleted successfully\n        \"\"\"\n        result = self._delete(f\"/api/v1/hints/{hint_id}\")\n\n        return result[\"success\"]\n</code></pre>"},{"location":"ctfdpy/api/hints/#ctfdpy.api.hints.HintsAPI.list","title":"list","text":"<pre><code>list(\n    *,\n    type: HintType | None = None,\n    challenge_id: int | None = None,\n    content: str | None = None,\n    cost: int | None = None,\n    q: str | None = None,\n    field: Literal[\"type\", \"content\"] | None = None\n) -&gt; list[LockedHint]\n</code></pre> <p>This method is only available to admins</p> <p>This method returns limited information for hints</p> <p>Method to list all hints with optional filtering</p> <p>Parameters:</p> Name Type Description Default <code>type</code> <code>HintType | None</code> <p>The type of the hint</p> <code>None</code> <code>challenge_id</code> <code>int | None</code> <p>The ID of the challenge associated with the hint</p> <code>None</code> <code>content</code> <code>str | None</code> <p>The content of the hint</p> <code>None</code> <code>cost</code> <code>int | None</code> <p>The cost of the hint</p> <code>None</code> <code>q</code> <code>str | None</code> <p>The query string to search for</p> <code>None</code> <code>field</code> <code>Literal['type', 'content'] | None</code> <p>The field to search in</p> <code>None</code> <p>Returns:</p> Type Description <code>list[LockedHint]</code> <p>The list of hints</p> Source code in <code>ctfdpy\\api\\hints.py</code> <pre><code>@admin_only\ndef list(\n    self,\n    *,\n    type: HintType | None = None,\n    challenge_id: int | None = None,\n    content: str | None = None,\n    cost: int | None = None,\n    q: str | None = None,\n    field: Literal[\"type\", \"content\"] | None = None,\n) -&gt; list[LockedHint]:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    !!! warning \"This method returns limited information for hints\"\n\n    Method to list all hints with optional filtering\n\n    Parameters\n    ----------\n    type : HintType | None\n        The type of the hint\n    challenge_id : int | None\n        The ID of the challenge associated with the hint\n    content : str | None\n        The content of the hint\n    cost : int | None\n        The cost of the hint\n    q : str | None\n        The query string to search for\n    field : Literal[\"type\", \"content\"] | None\n        The field to search in\n\n    Returns\n    -------\n    list[LockedHint]\n        The list of hints\n    \"\"\"\n    # Check that q and field are both provided or neither are provided\n    if q is None != field is None:\n        raise ValueError(\n            \"Both q and field must be provided or neither must be provided\"\n        )\n\n    params = {}\n    if type is not None:\n        params[\"type\"] = type\n    if challenge_id is not None:\n        params[\"challenge_id\"] = challenge_id\n    if content is not None:\n        params[\"content\"] = content\n    if cost is not None:\n        params[\"cost\"] = cost\n    if q is not None:\n        params[\"q\"] = q\n        params[\"field\"] = field\n\n    result = self._get(\"/api/v1/hints\", params=params)\n\n    return [LockedHint.model_validate(hint) for hint in result[\"data\"]]\n</code></pre>"},{"location":"ctfdpy/api/hints/#ctfdpy.api.hints.HintsAPI.create","title":"create","text":"<pre><code>create(\n    *,\n    payload: CreateHintPayload | None = None,\n    challenge_id: int | None = None,\n    content: str | None = None,\n    cost: int | None = None,\n    type: HintType = HintType.STANDARD,\n    requirements: dict[str, str] | None = None\n) -&gt; Hint\n</code></pre> <p>This method is only available to admins</p> <p>Method to create a hint</p> <p>Parameters:</p> Name Type Description Default <code>payload</code> <code>CreateHintPayload</code> <p>The payload for creating a hint. If this is provided, no other parameters should be provided</p> <code>None</code> <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> <code>None</code> <code>content</code> <code>str</code> <p>The content of the hint</p> <code>None</code> <code>cost</code> <code>int</code> <p>The cost of the hint</p> <code>None</code> <code>type</code> <code>HintType</code> <p>The type of the hint</p> <code>STANDARD</code> <code>requirements</code> <code>dict[str, str]</code> <p>The requirements of the hint</p> <code>None</code> <p>Returns:</p> Type Description <code>Hint</code> <p>The created hint</p> Source code in <code>ctfdpy\\api\\hints.py</code> <pre><code>@admin_only\ndef create(\n    self,\n    *,\n    payload: CreateHintPayload | None = None,\n    challenge_id: int | None = None,\n    content: str | None = None,\n    cost: int | None = None,\n    type: HintType = HintType.STANDARD,\n    requirements: dict[str, str] | None = None,\n) -&gt; Hint:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    Method to create a hint\n\n    Parameters\n    ----------\n    payload : CreateHintPayload\n        The payload for creating a hint. If this is provided, no other parameters should be provided\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    content : str\n        The content of the hint\n    cost : int\n        The cost of the hint\n    type : HintType\n        The type of the hint\n    requirements : dict[str, str]\n        The requirements of the hint\n\n    Returns\n    -------\n    Hint\n        The created hint\n    \"\"\"\n    if payload is None:\n        try:\n            payload = CreateHintPayload(\n                challenge_id=challenge_id,\n                content=content,\n                cost=cost,\n                type=type,\n                requirements=requirements,\n            )\n        except ValidationError as e:\n            raise CTFdpyModelValidationError(e.errors())\n\n    result = self._post(\"/api/v1/hints\", json=payload.to_payload())\n\n    return Hint.model_validate(result)\n</code></pre>"},{"location":"ctfdpy/api/hints/#ctfdpy.api.hints.HintsAPI.get","title":"get","text":"<pre><code>get(hint_id: int) -&gt; Hint | LockedHint | UnlockedHint\n</code></pre> <p>This method is only available to admins</p> <p>Gets a hint by ID</p> <p>Parameters:</p> Name Type Description Default <code>hint_id</code> <code>int</code> <p>The ID of the hint</p> required <p>Returns:</p> Type Description <code>LockedHint</code> <p>The hint</p> Source code in <code>ctfdpy\\api\\hints.py</code> <pre><code>@admin_only\ndef get(self, hint_id: int) -&gt; Hint | LockedHint | UnlockedHint:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    Gets a hint by ID\n\n    Parameters\n    ----------\n    hint_id : int\n        The ID of the hint\n\n    Returns\n    -------\n    LockedHint\n        The hint\n    \"\"\"\n    result = self._get(f\"/api/v1/hints/{hint_id}\")\n\n    return hint_adapter.validate_python(result[\"data\"])\n</code></pre>"},{"location":"ctfdpy/api/hints/#ctfdpy.api.hints.HintsAPI.update","title":"update","text":"<pre><code>update(\n    hint_id: int,\n    *,\n    payload: UpdateHintPayload | None = None,\n    **kwargs\n) -&gt; Hint\n</code></pre> <p>This method is only available to admins</p> <p>Method to update a hint</p> <p>Parameters:</p> Name Type Description Default <code>hint_id</code> <code>int</code> <p>The ID of the hint</p> required <code>payload</code> <code>UpdateHintPayload</code> <p>The payload for updating a hint. If this is provided, no other parameters should be provided</p> <code>None</code> <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> required <code>content</code> <code>str</code> <p>The content of the hint</p> required <code>cost</code> <code>int</code> <p>The cost of the hint</p> required <code>type</code> <code>HintType</code> <p>The type of the hint</p> required <code>requirements</code> <code>dict[str, str] | None</code> <p>The requirements of the hint</p> required <p>Returns:</p> Type Description <code>Hint</code> <p>The updated hint</p> Source code in <code>ctfdpy\\api\\hints.py</code> <pre><code>@admin_only\ndef update(\n    self,\n    hint_id: int,\n    *,\n    payload: UpdateHintPayload | None = None,\n    **kwargs,\n) -&gt; Hint:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    Method to update a hint\n\n    Parameters\n    ----------\n    hint_id : int\n        The ID of the hint\n    payload : UpdateHintPayload\n        The payload for updating a hint. If this is provided, no other parameters should be provided\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    content : str\n        The content of the hint\n    cost : int\n        The cost of the hint\n    type : HintType\n        The type of the hint\n    requirements : dict[str, str] | None\n        The requirements of the hint\n\n    Returns\n    -------\n    Hint\n        The updated hint\n    \"\"\"\n    if payload is None:\n        try:\n            payload = UpdateHintPayload(**kwargs)\n        except ValidationError as e:\n            raise CTFdpyModelValidationError(e.errors())\n\n    result = self._patch(f\"/api/v1/hints/{hint_id}\", json=payload.to_payload())\n\n    return Hint.model_validate(result)\n</code></pre>"},{"location":"ctfdpy/api/hints/#ctfdpy.api.hints.HintsAPI.delete","title":"delete","text":"<pre><code>delete(hint_id: int) -&gt; bool\n</code></pre> <p>This method is only available to admins</p> <p>Method to delete a hint</p> <p>Parameters:</p> Name Type Description Default <code>hint_id</code> <code>int</code> <p>The ID of the hint</p> required <p>Returns:</p> Type Description <code>bool</code> <p>Whether the hint was deleted successfully</p> Source code in <code>ctfdpy\\api\\hints.py</code> <pre><code>@admin_only\ndef delete(self, hint_id: int) -&gt; bool:\n    \"\"\"\n    !!! note \"This method is only available to admins\"\n\n    Method to delete a hint\n\n    Parameters\n    ----------\n    hint_id : int\n        The ID of the hint\n\n    Returns\n    -------\n    bool\n        Whether the hint was deleted successfully\n    \"\"\"\n    result = self._delete(f\"/api/v1/hints/{hint_id}\")\n\n    return result[\"success\"]\n</code></pre>"},{"location":"ctfdpy/models/files/","title":"Files","text":""},{"location":"ctfdpy/models/files/#ctfdpy.models.files.BaseFile","title":"BaseFile","text":"<p>             Bases: <code>Model</code></p> <p>A base file model. Not meant to be instantiated directly.</p> <p>This model cannot be edited since there is no endpoint to update files in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The ID of the file</p> required <code>type</code> <code>FileType</code> <p>The type of the file</p> required <code>location</code> <code>str</code> <p>The location of the file</p> required <code>sha1sum</code> <code>str</code> <p>The SHA-1 checksum of the file</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The ID of the file</p> <code>type</code> <code>FileType</code> <p>The type of the file</p> <code>location</code> <code>str</code> <p>The location of the file</p> <code>sha1sum</code> <code>str</code> <p>The SHA-1 checksum of the file</p> Source code in <code>ctfdpy\\models\\files.py</code> <pre><code>class BaseFile(Model, frozen=True):\n    \"\"\"\n    A base file model. Not meant to be instantiated directly.\n\n    This model cannot be edited since there is no endpoint to update files in CTFd.\n\n    Parameters\n    ----------\n    id : int\n        The ID of the file\n    type : FileType\n        The type of the file\n    location : str\n        The location of the file\n    sha1sum : str\n        The SHA-1 checksum of the file\n\n    Attributes\n    ----------\n    id : int\n        The ID of the file\n    type : FileType\n        The type of the file\n    location : str\n        The location of the file\n    sha1sum : str\n        The SHA-1 checksum of the file\n    \"\"\"\n\n    id: int = Field(frozen=True, exclude=True)\n    type: FileType\n    location: str\n    sha1sum: str\n</code></pre>"},{"location":"ctfdpy/models/files/#ctfdpy.models.files.StandardFile","title":"StandardFile","text":"<p>             Bases: <code>BaseFile</code></p> <p>Represents a standard file in CTFd.</p> <p>This model cannot be edited since there is no endpoint to update files in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The ID of the file</p> required <code>type</code> <code>Literal[STANDARD]</code> <p>The type of the file. This should always be <code>\"standard\"</code></p> required <code>location</code> <code>str</code> <p>The location of the file</p> required <code>sha1sum</code> <code>str</code> <p>The SHA-1 checksum of the file</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The ID of the file</p> <code>type</code> <code>Literal[STANDARD]</code> <p>The type of the file. This should always be <code>\"standard\"</code></p> <code>location</code> <code>str</code> <p>The location of the file</p> <code>sha1sum</code> <code>str</code> <p>The SHA-1 checksum of the file</p> Source code in <code>ctfdpy\\models\\files.py</code> <pre><code>class StandardFile(BaseFile):\n    \"\"\"\n    Represents a standard file in CTFd.\n\n    This model cannot be edited since there is no endpoint to update files in CTFd.\n\n    Parameters\n    ----------\n    id : int\n        The ID of the file\n    type : Literal[FileType.STANDARD]\n        The type of the file. This should always be `\"standard\"`\n    location : str\n        The location of the file\n    sha1sum : str\n        The SHA-1 checksum of the file\n\n    Attributes\n    ----------\n    id : int\n        The ID of the file\n    type : Literal[FileType.STANDARD]\n        The type of the file. This should always be `\"standard\"`\n    location : str\n        The location of the file\n    sha1sum : str\n        The SHA-1 checksum of the file\n    \"\"\"\n\n    type: Literal[FileType.STANDARD]\n</code></pre>"},{"location":"ctfdpy/models/files/#ctfdpy.models.files.ChallengeFile","title":"ChallengeFile","text":"<p>             Bases: <code>BaseFile</code></p> <p>Represents a challenge file in CTFd.</p> <p>This model cannot be edited since there is no endpoint to update files in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The ID of the file</p> required <code>type</code> <code>Literal[CHALLENGE]</code> <p>The type of the file. This should always be <code>\"challenge\"</code></p> required <code>location</code> <code>str</code> <p>The location of the file</p> required <code>sha1sum</code> <code>str</code> <p>The SHA-1 checksum of the file</p> required <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the file</p> required <code>challenge</code> <code>int</code> <p>Alias for <code>challenge_id</code></p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The ID of the file</p> <code>type</code> <code>Literal[CHALLENGE]</code> <p>The type of the file. This should always be <code>\"challenge\"</code></p> <code>location</code> <code>str</code> <p>The location of the file</p> <code>sha1sum</code> <code>str</code> <p>The SHA-1 checksum of the file</p> <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the file</p> Source code in <code>ctfdpy\\models\\files.py</code> <pre><code>class ChallengeFile(BaseFile):\n    \"\"\"\n    Represents a challenge file in CTFd.\n\n    This model cannot be edited since there is no endpoint to update files in CTFd.\n\n    Parameters\n    ----------\n    id : int\n        The ID of the file\n    type : Literal[FileType.CHALLENGE]\n        The type of the file. This should always be `\"challenge\"`\n    location : str\n        The location of the file\n    sha1sum : str\n        The SHA-1 checksum of the file\n    challenge_id : int\n        The ID of the challenge associated with the file\n    challenge : int\n        Alias for `challenge_id`\n\n    Attributes\n    ----------\n    id : int\n        The ID of the file\n    type : Literal[FileType.CHALLENGE]\n        The type of the file. This should always be `\"challenge\"`\n    location : str\n        The location of the file\n    sha1sum : str\n        The SHA-1 checksum of the file\n    challenge_id : int\n        The ID of the challenge associated with the file\n    \"\"\"\n\n    type: Literal[FileType.CHALLENGE]\n    challenge_id: int = Field(\n        validation_alias=AliasChoices(\"challenge_id\", \"challenge\")\n    )\n</code></pre>"},{"location":"ctfdpy/models/files/#ctfdpy.models.files.PageFile","title":"PageFile","text":"<p>             Bases: <code>BaseFile</code></p> <p>Represents a page file in CTFd.</p> <p>This model cannot be edited since there is no endpoint to update files in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The ID of the file</p> required <code>type</code> <code>Literal[PAGE]</code> <p>The type of the file. This should always be <code>\"page\"</code></p> required <code>location</code> <code>str</code> <p>The location of the file</p> required <code>sha1sum</code> <code>str</code> <p>The SHA-1 checksum of the file</p> required <code>page_id</code> <code>int</code> <p>The ID of the page associated with the file</p> required <code>page</code> <code>int</code> <p>Alias for <code>page_id</code></p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The ID of the file</p> <code>type</code> <code>Literal[PAGE]</code> <p>The type of the file. This should always be <code>\"page\"</code></p> <code>location</code> <code>str</code> <p>The location of the file</p> <code>sha1sum</code> <code>str</code> <p>The SHA-1 checksum of the file</p> <code>page_id</code> <code>int</code> <p>The ID of the page associated with the file</p> Source code in <code>ctfdpy\\models\\files.py</code> <pre><code>class PageFile(BaseFile):\n    \"\"\"\n    Represents a page file in CTFd.\n\n    This model cannot be edited since there is no endpoint to update files in CTFd.\n\n    Parameters\n    ----------\n    id : int\n        The ID of the file\n    type : Literal[FileType.PAGE]\n        The type of the file. This should always be `\"page\"`\n    location : str\n        The location of the file\n    sha1sum : str\n        The SHA-1 checksum of the file\n    page_id : int\n        The ID of the page associated with the file\n    page : int\n        Alias for `page_id`\n\n    Attributes\n    ----------\n    id : int\n        The ID of the file\n    type : Literal[FileType.PAGE]\n        The type of the file. This should always be `\"page\"`\n    location : str\n        The location of the file\n    sha1sum : str\n        The SHA-1 checksum of the file\n    page_id : int\n        The ID of the page associated with the file\n    \"\"\"\n\n    type: Literal[FileType.PAGE]\n    page_id: int = Field(validation_alias=AliasChoices(\"page_id\", \"page\"))\n</code></pre>"},{"location":"ctfdpy/models/files/#ctfdpy.models.files.CreateFilePayload","title":"CreateFilePayload","text":"<p>             Bases: <code>CreatePayloadModel</code></p> <p>Payload to create files in CTFd</p> <p>Parameters:</p> Name Type Description Default <code>files</code> <code>list[MultipartFileTypes]</code> <p>The files to create</p> required <code>type</code> <code>FileType</code> <p>The type of the files</p> required <code>challenge_id</code> <code>int | None</code> <p>The ID of the challenge associated with the files. Required if <code>type</code> is <code>\"challenge\"</code></p> required <code>challenge</code> <code>int | None</code> <p>Alias for <code>challenge_id</code></p> required <code>page_id</code> <code>int | None</code> <p>The ID of the page associated with the files. Required if <code>type</code> is <code>\"page\"</code></p> required <code>page</code> <code>int | None</code> <p>Alias for <code>page_id</code></p> required <code>location</code> <code>str | None</code> <p>The location to upload the files to. Cannot be specified if multiple files are provided</p> required <p>Attributes:</p> Name Type Description <code>files</code> <code>list[MultipartFileTypes]</code> <p>The files to create</p> <code>type</code> <code>FileType</code> <p>The type of the files</p> <code>challenge_id</code> <code>int | None</code> <p>The ID of the challenge associated with the files. Required if <code>type</code> is <code>\"challenge\"</code></p> <code>page_id</code> <code>int | None</code> <p>The ID of the page associated with the files. Required if <code>type</code> is <code>\"page\"</code></p> <code>location</code> <code>str | None</code> <p>The location to upload the files to. Cannot be specified if multiple files are provided</p> Source code in <code>ctfdpy\\models\\files.py</code> <pre><code>class CreateFilePayload(CreatePayloadModel):\n    \"\"\"\n    Payload to create files in CTFd\n\n    Parameters\n    ----------\n    files : list[MultipartFileTypes]\n        The files to create\n    type : FileType\n        The type of the files\n    challenge_id : int | None\n        The ID of the challenge associated with the files. Required if `type` is `\"challenge\"`\n    challenge : int | None\n        Alias for `challenge_id`\n    page_id : int | None\n        The ID of the page associated with the files. Required if `type` is `\"page\"`\n    page : int | None\n        Alias for `page_id`\n    location : str | None\n        The location to upload the files to. Cannot be specified if multiple files are provided\n\n    Attributes\n    ----------\n    files : list[MultipartFileTypes]\n        The files to create\n    type : FileType\n        The type of the files\n    challenge_id : int | None\n        The ID of the challenge associated with the files. Required if `type` is `\"challenge\"`\n    page_id : int | None\n        The ID of the page associated with the files. Required if `type` is `\"page\"`\n    location : str | None\n        The location to upload the files to. Cannot be specified if multiple files are provided\n    \"\"\"\n\n    files: list[\n        MultipartFileTypes\n    ]  # This might slow down the code due to the use of unions\n    type: FileType = FileType.STANDARD\n    challenge_id: int | None = Field(\n        None, validation_alias=AliasChoices(\"challenge_id\", \"challenge\")\n    )\n    page_id: int | None = Field(None, validate_alias=AliasChoices(\"page_id\", \"page\"))\n    location: str | None = Field(None)\n\n    @model_serializer()\n    def _model_ser(self) -&gt; CreateFilePayloadDict:\n        data = {\"type\": self.type}\n        if self.challenge_id is not None:\n            data[\"challenge_id\"] = self.challenge_id\n        if self.page_id is not None:\n            data[\"page_id\"] = self.page_id\n        if self.location is not None:\n            data[\"location\"] = self.location\n\n        return {\"files\": [(\"file\", file) for file in self.files], \"data\": data}\n\n    if TYPE_CHECKING:\n        # Ensure type checkers see the correct return type\n        def model_dump(\n            self,\n            *,\n            mode: Literal[\"json\", \"python\"] | str = \"python\",\n            include: Any = None,\n            exclude: Any = None,\n            by_alias: bool = False,\n            exclude_unset: bool = False,\n            exclude_defaults: bool = False,\n            exclude_none: bool = False,\n            round_trip: bool = False,\n            warnings: bool = True,\n        ) -&gt; CreateFilePayloadDict: ...\n\n    @model_validator(mode=\"after\")\n    def check_file_type(self) -&gt; CreateFilePayload:\n        match self.type:\n            case FileType.STANDARD:\n                if self.challenge_id is not None or self.page_id is not None:\n                    raise ValueError(\n                        \"Challenge ID and page ID must be None for standard files\"\n                    )\n            case FileType.CHALLENGE:\n                if self.challenge_id is None:\n                    raise ValueError(\n                        \"Challenge ID must be provided for challenge files\"\n                    )\n                if self.page_id is not None:\n                    raise ValueError(\"Page ID must be None for challenge files\")\n            case FileType.PAGE:\n                if self.page_id is None:\n                    raise ValueError(\"Page ID must be provided for page files\")\n                if self.challenge_id is not None:\n                    raise ValueError(\"Challenge ID must be None for page files\")\n        return self\n\n    @model_validator(mode=\"after\")\n    def check_file_count(self) -&gt; CreateFilePayload:\n        if len(self.files) == 0:\n            raise ValueError(\"At least one file must be provided\")\n        elif len(self.files) &gt; 1 and self.location is not None:\n            raise ValueError(\n                \"Location cannot be specified when multiple files are provided\"\n            )\n        return self\n</code></pre>"},{"location":"ctfdpy/models/hints/","title":"Hints","text":""},{"location":"ctfdpy/models/hints/#ctfdpy.models.hints.HintRequirementsDict","title":"HintRequirementsDict","text":"<p>             Bases: <code>TypedDict</code></p> <p>Represents the requirements of a hint in CTFd.</p> Source code in <code>ctfdpy\\models\\hints.py</code> <pre><code>class HintRequirementsDict(TypedDict):\n    \"\"\"\n    Represents the requirements of a hint in CTFd.\n    \"\"\"\n\n    prerequisites: list[int]\n</code></pre>"},{"location":"ctfdpy/models/hints/#ctfdpy.models.hints.BaseHint","title":"BaseHint","text":"<p>             Bases: <code>Model</code></p> <p>A base hint model. Not meant to be instantiated directly.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The ID of the hint</p> required <code>type</code> <code>HintType</code> <p>The type of the hint</p> required <code>challenge</code> <code>int</code> <p>Alias for <code>challenge_id</code></p> required <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> required <code>cost</code> <code>int</code> <p>The cost of the hint</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The ID of the hint, read-only</p> <code>type</code> <code>HintType</code> <p>The type of the hint</p> <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> <code>cost</code> <code>int</code> <p>The cost of the hint</p> Source code in <code>ctfdpy\\models\\hints.py</code> <pre><code>class BaseHint(Model):\n    \"\"\"\n    A base hint model. Not meant to be instantiated directly.\n\n    Parameters\n    ----------\n    id : int\n        The ID of the hint\n    type : HintType\n        The type of the hint\n    challenge : int\n        Alias for `challenge_id`\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    cost : int\n        The cost of the hint\n\n    Attributes\n    ----------\n    id : int\n        The ID of the hint, read-only\n    type : HintType\n        The type of the hint\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    cost : int\n        The cost of the hint\n    \"\"\"\n\n    id: int = Field(frozen=True, exclude=True)\n    type: HintType\n    challenge_id: int = Field(\n        validation_alias=AliasChoices(\"challenge_id\", \"challenge\")\n    )\n    cost: int\n\n    def to_update_payload(self) -&gt; UpdateHintPayload:\n        \"\"\"\n        Converts the hint to a payload for updating hints.\n\n        Returns\n        -------\n        HintUpdatePayload\n            The payload for updating hints\n        \"\"\"\n        return UpdateHintPayload.model_validate(self, from_attributes=True)\n</code></pre>"},{"location":"ctfdpy/models/hints/#ctfdpy.models.hints.BaseHint.to_update_payload","title":"to_update_payload","text":"<pre><code>to_update_payload() -&gt; UpdateHintPayload\n</code></pre> <p>Converts the hint to a payload for updating hints.</p> <p>Returns:</p> Type Description <code>HintUpdatePayload</code> <p>The payload for updating hints</p> Source code in <code>ctfdpy\\models\\hints.py</code> <pre><code>def to_update_payload(self) -&gt; UpdateHintPayload:\n    \"\"\"\n    Converts the hint to a payload for updating hints.\n\n    Returns\n    -------\n    HintUpdatePayload\n        The payload for updating hints\n    \"\"\"\n    return UpdateHintPayload.model_validate(self, from_attributes=True)\n</code></pre>"},{"location":"ctfdpy/models/hints/#ctfdpy.models.hints.Hint","title":"Hint","text":"<p>             Bases: <code>BaseHint</code></p> <p>Represents a hint in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The ID of the hint</p> required <code>type</code> <code>HintType</code> <p>The type of the hint</p> required <code>challenge</code> <code>int</code> <p>Alias for <code>challenge_id</code></p> required <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> required <code>content</code> <code>str</code> <p>The content of the hint</p> required <code>html</code> <code>str</code> <p>The HTML content of the hint</p> required <code>cost</code> <code>int</code> <p>The cost of the hint</p> required <code>requirements</code> <code>HintRequirementsDict | None</code> <p>The requirements of the hint</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The ID of the hint, read-only</p> <code>type</code> <code>HintType</code> <p>The type of the hint</p> <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> <code>content</code> <code>str</code> <p>The content of the hint</p> <code>html</code> <code>str</code> <p>The HTML content of the hint, read-only</p> <code>cost</code> <code>int</code> <p>The cost of the hint</p> <code>requirements</code> <code>HintRequirementsDict | None</code> <p>The requirements of the hint</p> Source code in <code>ctfdpy\\models\\hints.py</code> <pre><code>class Hint(BaseHint):\n    \"\"\"\n    Represents a hint in CTFd.\n\n    Parameters\n    ----------\n    id : int\n        The ID of the hint\n    type : HintType\n        The type of the hint\n    challenge : int\n        Alias for `challenge_id`\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    content : str\n        The content of the hint\n    html : str\n        The HTML content of the hint\n    cost : int\n        The cost of the hint\n    requirements : HintRequirementsDict | None\n        The requirements of the hint\n\n    Attributes\n    ----------\n    id : int\n        The ID of the hint, read-only\n    type : HintType\n        The type of the hint\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    content : str\n        The content of the hint\n    html : str\n        The HTML content of the hint, read-only\n    cost : int\n        The cost of the hint\n    requirements : HintRequirementsDict | None\n        The requirements of the hint\n    \"\"\"\n\n    content: str\n    html: str = Field(frozen=True, exclude=True)\n    requirements: HintRequirementsDict | None = None\n</code></pre>"},{"location":"ctfdpy/models/hints/#ctfdpy.models.hints.LockedHint","title":"LockedHint","text":"<p>             Bases: <code>BaseHint</code></p> <p>Represents a locked hint in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The ID of the hint</p> required <code>type</code> <code>HintType</code> <p>The type of the hint</p> required <code>challenge</code> <code>int</code> <p>Alias for <code>challenge_id</code></p> required <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> required <code>cost</code> <code>int</code> <p>The cost of the hint</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The ID of the hint, read-only</p> <code>type</code> <code>HintType</code> <p>The type of the hint</p> <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> <code>cost</code> <code>int</code> <p>The cost of the hint</p> Source code in <code>ctfdpy\\models\\hints.py</code> <pre><code>class LockedHint(BaseHint):\n    \"\"\"\n    Represents a locked hint in CTFd.\n\n    Parameters\n    ----------\n    id : int\n        The ID of the hint\n    type : HintType\n        The type of the hint\n    challenge : int\n        Alias for `challenge_id`\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    cost : int\n        The cost of the hint\n\n    Attributes\n    ----------\n    id : int\n        The ID of the hint, read-only\n    type : HintType\n        The type of the hint\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    cost : int\n        The cost of the hint\n    \"\"\"\n</code></pre>"},{"location":"ctfdpy/models/hints/#ctfdpy.models.hints.UnlockedHint","title":"UnlockedHint","text":"<p>             Bases: <code>BaseHint</code></p> <p>Represents an unlocked hint in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The ID of the hint</p> required <code>type</code> <code>HintType</code> <p>The type of the hint</p> required <code>challenge</code> <code>int</code> <p>Alias for <code>challenge_id</code></p> required <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> required <code>content</code> <code>str</code> <p>The content of the hint</p> required <code>html</code> <code>str</code> <p>The HTML content of the hint</p> required <code>cost</code> <code>int</code> <p>The cost of the hint</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The ID of the hint, read-only</p> <code>type</code> <code>HintType</code> <p>The type of the hint</p> <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> <code>content</code> <code>str</code> <p>The content of the hint</p> <code>html</code> <code>str</code> <p>The HTML content of the hint, read-only</p> <code>cost</code> <code>int</code> <p>The cost of the hint</p> Source code in <code>ctfdpy\\models\\hints.py</code> <pre><code>class UnlockedHint(BaseHint):\n    \"\"\"\n    Represents an unlocked hint in CTFd.\n\n    Parameters\n    ----------\n    id : int\n        The ID of the hint\n    type : HintType\n        The type of the hint\n    challenge : int\n        Alias for `challenge_id`\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    content : str\n        The content of the hint\n    html : str\n        The HTML content of the hint\n    cost : int\n        The cost of the hint\n\n    Attributes\n    ----------\n    id : int\n        The ID of the hint, read-only\n    type : HintType\n        The type of the hint\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    content : str\n        The content of the hint\n    html : str\n        The HTML content of the hint, read-only\n    cost : int\n        The cost of the hint\n    \"\"\"\n\n    content: str\n    html: str = Field(frozen=True, exclude=True)\n</code></pre>"},{"location":"ctfdpy/models/hints/#ctfdpy.models.hints.CreateHintPayload","title":"CreateHintPayload","text":"<p>             Bases: <code>CreatePayloadModel</code></p> <p>Represents a hint create payload in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>type</code> <code>HintType</code> <p>The type of the hint</p> required <code>challenge</code> <code>int</code> <p>Alias for <code>challenge_id</code></p> required <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> required <code>cost</code> <code>int</code> <p>The cost of the hint</p> required <code>content</code> <code>str</code> <p>The content of the hint</p> required <code>requirements</code> <code>HintRequirementsDict | None</code> <p>The requirements of the hint</p> required Source code in <code>ctfdpy\\models\\hints.py</code> <pre><code>class CreateHintPayload(CreatePayloadModel):\n    \"\"\"\n    Represents a hint create payload in CTFd.\n\n    Parameters\n    ----------\n    type : HintType\n        The type of the hint\n    challenge : int\n        Alias for `challenge_id`\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    cost : int\n        The cost of the hint\n    content : str\n        The content of the hint\n    requirements : HintRequirementsDict | None\n        The requirements of the hint\n    \"\"\"\n\n    type: HintType\n    challenge_id: int = (\n        Field(validation_alias=AliasChoices(\"challenge_id\", \"challenge\")),\n    )\n    cost: int\n    content: str\n    requirements: HintRequirementsDict | None\n</code></pre>"},{"location":"ctfdpy/models/hints/#ctfdpy.models.hints.UpdateHintPayload","title":"UpdateHintPayload","text":"<p>             Bases: <code>UpdatePayloadModel</code></p> <p>Represents a hint update payload in CTFd.</p> <p>Parameters:</p> Name Type Description Default <code>type</code> <code>HintType</code> <p>The type of the hint</p> required <code>challenge</code> <code>int</code> <p>Alias for <code>challenge_id</code></p> required <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> required <code>cost</code> <code>int</code> <p>The cost of the hint</p> required <code>content</code> <code>str</code> <p>The content of the hint</p> required <code>requirements</code> <code>HintRequirementsDict | None</code> <p>The requirements of the hint. Specify <code>None</code> to remove the requirements</p> required <p>Attributes:</p> Name Type Description <code>type</code> <code>HintType</code> <p>The type of the hint</p> <code>challenge_id</code> <code>int</code> <p>The ID of the challenge associated with the hint</p> <code>cost</code> <code>int</code> <p>The cost of the hint</p> <code>content</code> <code>str</code> <p>The content of the hint</p> <code>requirements</code> <code>HintRequirementsDict | None</code> <p>The requirements of the hint</p> Source code in <code>ctfdpy\\models\\hints.py</code> <pre><code>class UpdateHintPayload(UpdatePayloadModel):\n    \"\"\"\n    Represents a hint update payload in CTFd.\n\n    Parameters\n    ----------\n    type : HintType\n        The type of the hint\n    challenge : int\n        Alias for `challenge_id`\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    cost : int\n        The cost of the hint\n    content : str\n        The content of the hint\n    requirements : HintRequirementsDict | None\n        The requirements of the hint. Specify `None` to remove the requirements\n\n    Attributes\n    ----------\n    type : HintType\n        The type of the hint\n    challenge_id : int\n        The ID of the challenge associated with the hint\n    cost : int\n        The cost of the hint\n    content : str\n        The content of the hint\n    requirements : HintRequirementsDict | None\n        The requirements of the hint\n    \"\"\"\n\n    type: HintType = MISSING\n    challenge_id: int = Field(\n        MISSING, validation_alias=AliasChoices(\"challenge_id\", \"challenge\")\n    )\n    cost: int = MISSING\n    content: str = MISSING\n    requirements: HintRequirementsDict | None = MISSING\n</code></pre>"},{"location":"ctfdpy/models/model/","title":"Models","text":""},{"location":"ctfdpy/models/model/#ctfdpy.models.model.Model","title":"Model","text":"<p>             Bases: <code>BaseModel</code></p> <p>The base model for all models</p> <p>This class should not be instantiated directly</p> Source code in <code>ctfdpy\\models\\model.py</code> <pre><code>class Model(BaseModel):\n    \"\"\"\n    The base model for all models\n\n    This class should not be instantiated directly\n    \"\"\"\n\n    model_config = ConfigDict(\n        extra=\"allow\", use_enum_values=True, validate_assignment=True\n    )\n</code></pre>"},{"location":"ctfdpy/models/model/#ctfdpy.models.model.CreatePayloadModel","title":"CreatePayloadModel","text":"<p>             Bases: <code>Model</code></p> <p>The base model for all create payload models</p> <p>This class should not be instantiated directly</p> Source code in <code>ctfdpy\\models\\model.py</code> <pre><code>class CreatePayloadModel(Model, extra=\"forbid\"):\n    \"\"\"\n    The base model for all create payload models\n\n    This class should not be instantiated directly\n    \"\"\"\n\n    def to_payload(self, **kwargs) -&gt; dict[str, Any]:\n        \"\"\"\n        Converts the model to a payload\n\n        Parameters\n        ----------\n        kwargs : dict[str, Any]\n            Additional keyword arguments to pass to the model dump\n\n        Returns\n        -------\n        dict[str, Any]\n            The payload\n        \"\"\"\n        return self.model_dump(mode=\"json\", exclude_unset=True, **kwargs)\n</code></pre>"},{"location":"ctfdpy/models/model/#ctfdpy.models.model.CreatePayloadModel.to_payload","title":"to_payload","text":"<pre><code>to_payload(**kwargs) -&gt; dict[str, Any]\n</code></pre> <p>Converts the model to a payload</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>dict[str, Any]</code> <p>Additional keyword arguments to pass to the model dump</p> <code>{}</code> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>The payload</p> Source code in <code>ctfdpy\\models\\model.py</code> <pre><code>def to_payload(self, **kwargs) -&gt; dict[str, Any]:\n    \"\"\"\n    Converts the model to a payload\n\n    Parameters\n    ----------\n    kwargs : dict[str, Any]\n        Additional keyword arguments to pass to the model dump\n\n    Returns\n    -------\n    dict[str, Any]\n        The payload\n    \"\"\"\n    return self.model_dump(mode=\"json\", exclude_unset=True, **kwargs)\n</code></pre>"},{"location":"ctfdpy/models/model/#ctfdpy.models.model.UpdatePayloadModel","title":"UpdatePayloadModel","text":"<p>             Bases: <code>Model</code></p> <p>The base model for all update payload models</p> <p>This class should not be instantiated directly</p> Source code in <code>ctfdpy\\models\\model.py</code> <pre><code>class UpdatePayloadModel(Model, extra=\"forbid\"):\n    \"\"\"\n    The base model for all update payload models\n\n    This class should not be instantiated directly\n    \"\"\"\n\n    def to_payload(self, **kwargs) -&gt; dict[str, Any]:\n        \"\"\"\n        Converts the model to a payload\n\n        Parameters\n        ----------\n        kwargs : dict[str, Any]\n            Additional keyword arguments to pass to the model dump\n\n        Returns\n        -------\n        dict[str, Any]\n            The payload\n        \"\"\"\n        return self.model_dump(mode=\"json\", exclude_unset=True, **kwargs)\n</code></pre>"},{"location":"ctfdpy/models/model/#ctfdpy.models.model.UpdatePayloadModel.to_payload","title":"to_payload","text":"<pre><code>to_payload(**kwargs) -&gt; dict[str, Any]\n</code></pre> <p>Converts the model to a payload</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>dict[str, Any]</code> <p>Additional keyword arguments to pass to the model dump</p> <code>{}</code> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>The payload</p> Source code in <code>ctfdpy\\models\\model.py</code> <pre><code>def to_payload(self, **kwargs) -&gt; dict[str, Any]:\n    \"\"\"\n    Converts the model to a payload\n\n    Parameters\n    ----------\n    kwargs : dict[str, Any]\n        Additional keyword arguments to pass to the model dump\n\n    Returns\n    -------\n    dict[str, Any]\n        The payload\n    \"\"\"\n    return self.model_dump(mode=\"json\", exclude_unset=True, **kwargs)\n</code></pre>"},{"location":"endpoints/challenges/","title":"Challenges Endpoints","text":"<p>CTFd Version: <code>3.7.0</code></p> <p>Last Updated: 30/3/2024</p>"},{"location":"endpoints/challenges/#models","title":"Models","text":"<ul> <li><code>Challenge</code> Model</li> <li><code>DynamicChallenge</code> Model</li> <li><code>PartialChallenge</code> Model</li> <li><code>HiddenChallenge</code> Model</li> <li><code>LockedChallengeHint</code> Model</li> <li><code>UnlockedChallengeHint</code> Model</li> <li><code>ChallengeAttemptResult</code> Model</li> <li><code>ChallengeType</code> Model</li> <li><code>ChallengeFileResponse</code> Model</li> <li><code>ChallengeRequirements</code> Model</li> <li><code>ChallengeSolvesResponse</code> Model</li> <li><code>ChallengeTopicResponse</code> Model</li> </ul>"},{"location":"endpoints/challenges/#challenge-model","title":"<code>Challenge</code> Model","text":"<p>Represents a challenge returned by the <code>GET /challenges/{challenge_id}</code> endpoint.</p> <pre><code>{\n    \"id\": 1,\n    \"name\": \"string\",\n    \"value\": 1,\n    \"description\": \"string\",\n    \"connection_info\": \"string\",\n    \"next_id\": 1,\n    \"category\": \"string\",\n    \"state\": \"string\",\n    \"max_attempts\": 1,\n    \"type\": \"standard\",\n    \"type_data\": {\n        \"id\": \"standard\",\n        \"name\": \"standard\",\n        \"templates\": {\n            \"create\": \"string\",\n            \"update\": \"string\",\n            \"view\": \"string\"\n        },\n        \"scripts\": {\n            \"create\": \"string\",\n            \"update\": \"string\",\n            \"view\": \"string\"\n        }\n    },\n    \"solves\": 1,\n    \"solved_by_me\": true,\n    \"attempts\": 1,\n    \"files\": [\n        \"string\"\n    ],\n    \"tags\": [\n        \"string\"\n    ],\n    \"hints\": [{ }],\n    \"view\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>type_data</code> <code>dict[str, Any]</code> The data associated with the challenge type. Used internally by the frontend <code>solves</code> <code>int</code> The number of solves for the challenge <code>solved_by_me</code> <code>bool</code> Whether or not the current user has solved the challenge <code>attempts</code> <code>int</code> The number of attempts the current user has made on the challenge <code>files</code> <code>list[str]</code> A list of files associated with the challenge <code>tags</code> <code>list[str]</code> A list of tags associated with the challenge <code>hints</code> <code>list[</code> <code>LockedChallengeHint</code><code>|</code><code>UnlockedChallengeHint</code><code>]</code> A list of hints associated with the challenge <code>view</code> <code>string</code> The view of the challenge. Used internally by the frontend"},{"location":"endpoints/challenges/#dynamicchallenge-model","title":"<code>DynamicChallenge</code> Model","text":"<p>Represents a challenge with a dynamic value. This model is returned by <code>GET /challenges</code>.</p> <pre><code>{\n    \"id\": 1,\n    \"name\": \"string\",\n    \"value\": 1, // (1)!\n    \"initial\": 1,\n    \"decay\": 1,\n    \"minimum\": 1,\n    \"function\": \"string\",\n    \"description\": \"string\",\n    \"connection_info\": \"string\",\n    \"next_id\": 1,\n    \"category\": \"string\",\n    \"state\": \"string\",\n    \"max_attempts\": 1,\n    \"type\": \"dynamic\",\n    \"type_data\": {\n        \"id\": \"dynamic\",\n        \"name\": \"dynamic\",\n        \"templates\": {\n            \"create\": \"string\",\n            \"update\": \"string\",\n            \"view\": \"string\"\n        },\n        \"scripts\": {\n            \"create\": \"string\",\n            \"update\": \"string\",\n            \"view\": \"string\"\n        }\n    },\n    \"solves\": 1,\n    \"solved_by_me\": true,\n    \"attempts\": 1,\n    \"files\": [\n        \"string\"\n    ],\n    \"tags\": [\n        \"string\"\n    ],\n    \"hints\": [{ }],\n    \"view\": \"string\"\n}\n</code></pre> <ol> <li>The <code>value</code> field is read-only and represents the current value of the challenge. This value is calculated based on the <code>initial</code>, <code>decay</code>, and <code>minimum</code> fields.</li> </ol> <p>As of CTFd <code>3.7.0</code>, the <code>function</code> field is not returned by the API.</p> Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge. This is read-only for dynamic challenges <code>initial</code> <code>int</code> The initial value of the challenge <code>decay</code> <code>int</code> The decay rate of the challenge <code>minimum</code> <code>int</code> The minimum value of the challenge <code>function</code> <code>string</code> The function used to calculate the value of the challenge. Possible values are <code>\"logarithmic\"</code> and <code>\"linear\"</code> <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>Literal[\"dynamic\"]</code> The type of the challenge. Has to be <code>\"dynamic\"</code> for dynamic challenges <code>type_data</code> <code>dict[str, Any]</code> The data associated with the challenge type. Used internally by the frontend <code>solves</code> <code>int</code> The number of solves for the challenge <code>solved_by_me</code> <code>bool</code> Whether or not the current user has solved the challenge <code>attempts</code> <code>int</code> The number of attempts the current user has made on the challenge <code>files</code> <code>list[str]</code> A list of files associated with the challenge <code>tags</code> <code>list[str]</code> A list of tags associated with the challenge <code>hints</code> <code>list[</code> <code>LockedChallengeHint</code><code>|</code><code>UnlockedChallengeHint</code><code>]</code> A list of hints associated with the challenge <code>view</code> <code>string</code> The view of the challenge. Used internally by the frontend"},{"location":"endpoints/challenges/#partialchallenge-model","title":"<code>PartialChallenge</code> Model","text":"<p>Represents a challenge with only partial details. This model is returned by <code>GET /challenges</code>.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"string\",\n    \"name\": \"string\",\n    \"value\": 1,\n    \"solves\": 1,\n    \"solved_by_me\": true,\n    \"category\": \"string\",\n    \"tags\": [\n        \"string\"\n    ],\n    \"template\": \"string\",\n    \"script\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>solves</code> <code>int</code> The number of solves for the challenge <code>solved_by_me</code> <code>bool</code> Whether or not the current user has solved the challenge <code>category</code> <code>string</code> The category of the challenge <code>tags</code> <code>list[str]</code> A list of tags associated with the challenge <code>template</code> <code>string</code> The template of the challenge. Used internally by the frontend <code>script</code> <code>string</code> The script of the challenge. Used internally by the frontend"},{"location":"endpoints/challenges/#hiddenchallenge-model","title":"<code>HiddenChallenge</code> Model","text":"<p>Represents a challenge with details hidden from the user. This is used for challenges with requirements not yet fulfilled by the user.</p> <p>Warning</p> <p>This model is a hard-coded response and should not be confused with a <code>Challenge</code> that has <code>state</code> set to <code>\"hidden\"</code>.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"hidden\",\n    \"name\": \"???\",\n    \"value\": 0,\n    \"solves\": null,\n    \"solved_by_me\": false,\n    \"category\": \"???\",\n    \"tags\": [],\n    \"template\": \"\",\n    \"script\": \"\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>type</code> <code>string</code> The type of the challenge. Will always be <code>\"hidden\"</code> <code>name</code> <code>string</code> The name of the challenge. Will always be <code>\"???\"</code> <code>value</code> <code>int</code> The value of the challenge. Will always be <code>0</code> <code>solves</code> <code>int</code> The number of solves for the challenge. Will always be <code>None</code> <code>solved_by_me</code> <code>bool</code> Whether or not the current user has solved the challenge. Will always be <code>False</code> <code>category</code> <code>string</code> The category of the challenge. Will always be <code>\"???\"</code> <code>tags</code> <code>list[str]</code> A list of tags associated with the challenge. Will always be <code>[]</code> <code>template</code> <code>string</code> The template of the challenge. Will always be <code>\"\"</code> <code>script</code> <code>string</code> The script of the challenge. Will always be <code>\"\"</code>"},{"location":"endpoints/challenges/#challengerequirements-model","title":"<code>ChallengeRequirements</code> Model","text":"<p>Represents the requirements before a challenge can be accessed by a user.</p> <pre><code>{\n    \"prerequisites\": [\n        1\n    ],\n    \"anonymize\": false\n}\n</code></pre> Name Type Description <code>prerequisites</code> <code>list[int]</code> A list of challenge IDs that must be solved before this challenge can be accessed <code>anonymize</code> <code>bool</code> Whether or not to anonymize the challenge instead of hiding it if the <code>prerequisites</code> are not met. If not specified, defaults to <code>False</code>"},{"location":"endpoints/challenges/#lockedchallengehint-model","title":"<code>LockedChallengeHint</code> Model","text":"<p>Represents a hint that is locked for the current user.</p> <pre><code>{\n    \"id\": 1,\n    \"cost\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>cost</code> <code>int</code> The cost of the hint"},{"location":"endpoints/challenges/#unlockedchallengehint-model","title":"<code>UnlockedChallengeHint</code> Model","text":"<p>Represents a hint that is unlocked for the current user.</p> <pre><code>{\n    \"id\": 1,\n    \"cost\": 1,\n    \"content\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>cost</code> <code>int</code> The cost of the hint <code>content</code> <code>string</code> The content of the hint"},{"location":"endpoints/challenges/#challengeattemptresult-model","title":"<code>ChallengeAttemptResult</code> Model","text":"<p>Represents the response from sending a challenge attempt.</p> <pre><code>{\n    \"status\": \"string\",\n    \"message\": \"string\" // (1)!\n}\n</code></pre> <ol> <li>The message sometimes might be <code>null</code></li> </ol> Name Type Description <code>status</code> <code>string</code> The status of the attempt <code>message</code> <code>string</code> The message from the attempt Challenge Attempt Statuses Status Description Status Code <code>correct</code> The attempt was correct <code>200</code> <code>incorrect</code> The attempt was incorrect or you have 0 tries left for this challenge <code>200 / 403</code> <code>authentication_required</code> The user must log in to send an attempt <code>403</code> <code>paused</code> The CTF is paused <code>403</code> <code>ratelimited</code> The user is submitting attempts too quickly <code>429</code> <code>already_solved</code> The challenge has already been solved by the user or the user's team <code>200</code>"},{"location":"endpoints/challenges/#challengetype-model","title":"<code>ChallengeType</code> Model","text":"<p>Represents a challenge type.</p> <pre><code>{\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"templates\": {\n        \"create\": \"string\",\n        \"update\": \"string\",\n        \"view\": \"string\"\n    },\n    \"scripts\": {\n        \"create\": \"string\",\n        \"update\": \"string\",\n        \"view\": \"string\"\n    },\n    \"create\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>string</code> The ID of the challenge type <code>name</code> <code>string</code> The name of the challenge type <code>templates</code> <code>dict[str, str]</code> A dictionary of templates for creating, updating, and viewing challenges of this type <code>scripts</code> <code>dict[str, str]</code> A dictionary of scripts for creating, updating, and viewing challenges of this type <code>create</code> <code>string</code> The tempate for creating challenges of this type"},{"location":"endpoints/challenges/#challengefileresponse-model","title":"<code>ChallengeFileResponse</code> Model","text":"<p>Represents a file associated with a challenge.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"challenge\",\n    \"location\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the file <code>type</code> <code>Literal[\"challenge\"]</code> The type of the file. Will always be <code>\"challenge\"</code> <code>location</code> <code>string</code> The location of the file"},{"location":"endpoints/challenges/#challengesolvesresponse-model","title":"<code>ChallengeSolvesResponse</code> Model","text":"<p>Represents a solve for a challenge</p> <pre><code>{\n    \"account_id\": 1,\n    \"name\": \"string\",\n    \"date\": \"string\",\n    \"account_url\": \"string\"\n}\n</code></pre> Name Type Description <code>account_id</code> <code>int</code> The ID of the account that solved the challenge <code>name</code> <code>string</code> The name of the account that solved the challenge <code>date</code> <code>string</code> The date the challenge was solved <code>account_url</code> <code>string</code> The URL of the account that solved the challenge"},{"location":"endpoints/challenges/#challengetopicresponse-model","title":"<code>ChallengeTopicResponse</code> Model","text":"<p>Represents a topic associated with a challenge.</p> <pre><code>{\n    \"id\": 1,\n    \"challenge_id\": 1,\n    \"topic_id\": 1,\n    \"value\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the challenge-topic association <code>challenge_id</code> <code>int</code> The ID of the challenge <code>topic_id</code> <code>int</code> The ID of the topic <code>value</code> <code>string</code> The value of the topic"},{"location":"endpoints/challenges/#endpoints","title":"Endpoints","text":"<ul> <li><code>GET /challenges</code></li> <li><code>POST /challenges</code></li> <li><code>POST /challenges/attempt</code></li> <li><code>GET /challenges/types</code></li> <li><code>GET /challenges/{challenge_id}</code></li> <li><code>PATCH /challenges/{challenge_id}</code></li> <li><code>DELETE /challenges/{challenge_id}</code></li> <li><code>GET /challenges/{challenge_id}/files</code></li> <li><code>GET /challenges/{challenge_id}/flags</code></li> <li><code>GET /challenges/{challenge_id}/hints</code></li> <li><code>GET /challenges/{challenge_id}/requirements</code></li> <li><code>GET /challenges/{challenge_id}/solves</code></li> <li><code>GET /challenges/{challenge_id}/tags</code></li> <li><code>GET /challenges/{challenge_id}/topics</code></li> </ul>"},{"location":"endpoints/challenges/#get-challenges","title":"<code>GET /challenges</code>","text":"<p>Info</p> <p>This endpoint only returns challenges that are visible to the user by default. To get all challenges, set the <code>view</code> query parameter to <code>\"admin\"</code>.</p> <p>Warning</p> <p>The data returned by this endpoint only contains a part of each challenge's details. To get the full details of a challenge, use the <code>GET /challenges/{challenge_id}</code> endpoint.</p> <p>Endpoint to get challenges in bulk. Can be filtered by <code>name</code>, <code>max_attempts</code>, <code>value</code>, <code>category</code>, <code>type</code> and <code>state</code>.</p>"},{"location":"endpoints/challenges/#query-parameters","title":"Query Parameters","text":"Name Type Description <code>name</code> <code>string</code> The name of the challenge to get challenges for <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge to get challenges for <code>value</code> <code>int</code> The value of the challenge to get challenges for <code>category</code> <code>string</code> The category of the challenge to get challenges for <code>type</code> <code>string</code> The type of the challenge to get challenges for <code>state</code> <code>string</code> The state of the challenge to get challenges for. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>q</code> <code>string</code> A search query to match against the given <code>field</code>. If this is specified, <code>field</code> must also be specified <code>field</code> <code>string</code> The field to search against, can be either <code>name</code>, <code>description</code>, <code>category</code>, <code>type</code> or <code>state</code>. If this is specified, <code>q</code> must also be specified <code>view</code> <code>string</code> The view of the challenges to output. If set to <code>\"admin\"</code>, it will show all challenges including <code>hidden</code> and <code>locked</code> challenges."},{"location":"endpoints/challenges/#response","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The challenges were successfully retrieved</p> <ul> <li><code>list[</code><code>PartialChallenge</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"string\",\n            \"name\": \"string\",\n            \"value\": 1,\n            \"solves\": 1,\n            \"solved_by_me\": true,\n            \"category\": \"string\",\n            \"tags\": [\n                \"string\"\n            ],\n            \"template\": \"string\",\n            \"script\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>solves</code> <code>int</code> The number of solves for the challenge <code>solved_by_me</code> <code>bool</code> Whether or not the current user has solved the challenge <code>category</code> <code>string</code> The category of the challenge <code>tags</code> <code>list[str]</code> A list of tags associated with the challenge <code>template</code> <code>string</code> The template of the challenge. Used internally by the frontend <code>script</code> <code>string</code> The script of the challenge. Used internally by the frontend"},{"location":"endpoints/challenges/#post-challenges","title":"<code>POST /challenges</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to create a new challenge. Accepts either form data or JSON data.</p>"},{"location":"endpoints/challenges/#json-multipart-form-parameters","title":"JSON / Multipart Form Parameters","text":"Standard ChallengesDynamic Challenges Name Type Description <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>Literal[\"standard\"]</code> The type of the challenge. Has to be <code>\"standard\"</code> for standard challenges Name Type Description <code>name</code> <code>string</code> The name of the challenge <code>initial</code> <code>int</code> The initial value of the challenge <code>decay</code> <code>int</code> The decay rate of the challenge <code>minimum</code> <code>int</code> The minimum value of the challenge <code>function</code> <code>string</code> The function used to calculate the value of the challenge. Possible values are <code>\"logarithmic\"</code> and <code>\"linear\"</code> <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>Literal[\"dynamic\"]</code> The type of the challenge. Has to be <code>\"dynamic\"</code> for dynamic challenges"},{"location":"endpoints/challenges/#response_1","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The hint was created successfully</p> Standard ChallengesDynamic Challenges <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"string\",\n        \"value\": 1,\n        \"description\": \"string\",\n        \"connection_info\": \"string\",\n        \"next_id\": 1,\n        \"category\": \"string\",\n        \"state\": \"string\",\n        \"max_attempts\": 1,\n        \"type\": \"standard\",\n        \"type_data\": {\n            \"id\": \"standard\",\n            \"name\": \"standard\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            },\n            \"scripts\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            }\n        }\n    }\n}\n</code></pre> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"string\",\n        \"value\": 1,\n        \"initial\": 1,\n        \"decay\": 1,\n        \"minimum\": 1,\n        \"function\": \"string\",\n        \"description\": \"string\",\n        \"connection_info\": \"string\",\n        \"next_id\": 1,\n        \"category\": \"string\",\n        \"state\": \"string\",\n        \"max_attempts\": 1,\n        \"type\": \"dynamic\",\n        \"type_data\": {\n            \"id\": \"dynamic\",\n            \"name\": \"dynamic\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            },\n            \"scripts\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            }\n        }\n    }\n}\n</code></pre> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_1","title":"Return Values","text":"Standard ChallengesDynamic Challenges Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>type_data</code> <code>dict[str, Any]</code> The data associated with the challenge type. Used internally by the frontend Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>initial</code> <code>int</code> The initial value of the challenge <code>decay</code> <code>int</code> The decay rate of the challenge <code>minimum</code> <code>int</code> The minimum value of the challenge <code>function</code> <code>string</code> The function used to calculate the value of the challenge. Possible values are <code>\"logarithmic\"</code> and <code>\"linear\"</code> <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>type_data</code> <code>dict[str, Any]</code> The data associated with the challenge type. Used internally by the frontend"},{"location":"endpoints/challenges/#post-challengesattempt","title":"<code>POST /challenges/attempt</code>","text":"<p>Endpoint to send a challenge attempt.</p>"},{"location":"endpoints/challenges/#json-multipart-form-parameters_1","title":"JSON / Multipart Form Parameters","text":"Name Type Description <code>challenge_id</code> <code>int</code> The ID of the challenge to attempt <code>submission</code> <code>string</code> The submission for the challenge"},{"location":"endpoints/challenges/#response_2","title":"Response","text":"<p>Refer to <code>ChallengeAttemptResult</code> for possible responses</p> <p>Warning</p> <p>Even when the response code is <code>200 OK</code>, the <code>success</code> field might be <code>False</code> if the attempt was not successful. Additionally, the <code>success</code> field does not mean that the attempt was correct. The only way to tell that the attempt is correct is when the <code>status</code> field is <code>\"correct\"</code>.</p> <ul> <li><code>200 OK</code> - The attempt was successful<ul> <li> <p><code>ChallengeAttemptResult</code> <pre><code>{\n    \"success\": true, // (1)!\n    \"data\": {\n        \"status\": \"string\",\n        \"message\": \"string\"\n    }\n}\n</code></pre></p> <ol> <li>This may not always be <code>True</code>.</li> </ol> </li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_2","title":"Return Values","text":"Name Type Description <code>status</code> <code>string</code> The status of the attempt <code>message</code> <code>string</code> The message from the attempt <p>Refer to <code>ChallengeAttemptResult</code> for possible responses.</p>"},{"location":"endpoints/challenges/#get-challengestypes","title":"<code>GET /challenges/types</code>","text":"<p>Endpoint to get the available challenge types.</p>"},{"location":"endpoints/challenges/#response_3","title":"Response","text":"<ul> <li><code>200 OK</code> - The challenge types were successfully retrieved<ul> <li><code>list[</code><code>ChallengeType</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            },\n            \"scripts\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            },\n            \"create\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_3","title":"Return Values","text":"Name Type Description <code>id</code> <code>string</code> The ID of the challenge type <code>name</code> <code>string</code> The name of the challenge type <code>templates</code> <code>dict[str, str]</code> A dictionary of templates for creating, updating, and viewing challenges of this type <code>scripts</code> <code>dict[str, str]</code> A dictionary of scripts for creating, updating, and viewing challenges of this type <code>create</code> <code>string</code> The tempate for creating challenges of this type"},{"location":"endpoints/challenges/#get-challengeschallenge_id","title":"<code>GET /challenges/{challenge_id}</code>","text":"<p>Endpoint to get a challenge by ID.</p>"},{"location":"endpoints/challenges/#response_4","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The challenge was successfully retrieved</p> Standard ChallengeDynamic Challenge <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"string\",\n        \"value\": 1,\n        \"description\": \"string\",\n        \"connection_info\": \"string\",\n        \"next_id\": 1,\n        \"category\": \"string\",\n        \"state\": \"string\",\n        \"max_attempts\": 1,\n        \"type\": \"standard\",\n        \"type_data\": {\n            \"id\": \"standard\",\n            \"name\": \"standard\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            },\n            \"scripts\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            }\n        }\n    }\n}\n</code></pre> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"string\",\n        \"value\": 1,\n        \"initial\": 1,\n        \"decay\": 1,\n        \"minimum\": 1,\n        \"function\": \"string\",\n        \"description\": \"string\",\n        \"connection_info\": \"string\",\n        \"next_id\": 1,\n        \"category\": \"string\",\n        \"state\": \"string\",\n        \"max_attempts\": 1,\n        \"type\": \"dynamic\",\n        \"type_data\": {\n            \"id\": \"dynamic\",\n            \"name\": \"dynamic\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            },\n            \"scripts\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            }\n        }\n    }\n}\n</code></pre> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>500 Internal Server Error</code> - The underlying challenge type is not installed</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_4","title":"Return Values","text":"Standard ChallengeDynamic Challenge Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>type_data</code> <code>dict[str, Any]</code> The data associated with the challenge type. Used internally by the frontend Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>initial</code> <code>int</code> The initial value of the challenge <code>decay</code> <code>int</code> The decay rate of the challenge <code>minimum</code> <code>int</code> The minimum value of the challenge <code>function</code> <code>string</code> The function used to calculate the value of the challenge. Possible values are <code>\"logarithmic\"</code> and <code>\"linear\"</code> <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>type_data</code> <code>dict[str, Any]</code> The data associated with the challenge type. Used internally by the frontend"},{"location":"endpoints/challenges/#patch-challengeschallenge_id","title":"<code>PATCH /challenges/{challenge_id}</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to update a challenge by ID.</p>"},{"location":"endpoints/challenges/#json-parameters","title":"JSON Parameters","text":"<p>Warning</p> <p>The <code>\"locked\"</code> challenge state is not documented. Setting challenges to <code>\"locked\"</code> is not recommended.</p> Standard ChallengesDynamic Challenges Name Type Description <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge Name Type Description <code>name</code> <code>string</code> The name of the challenge <code>initial</code> <code>int</code> The initial value of the challenge <code>decay</code> <code>int</code> The decay rate of the challenge <code>minimum</code> <code>int</code> The minimum value of the challenge <code>function</code> <code>string</code> The function used to calculate the value of the challenge. Possible values are <code>\"logarithmic\"</code> and <code>\"linear\"</code> <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge"},{"location":"endpoints/challenges/#response_5","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The challenge was successfully retrieved</p> Standard ChallengesDynamic Challenges <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"string\",\n        \"value\": 1,\n        \"description\": \"string\",\n        \"connection_info\": \"string\",\n        \"next_id\": 1,\n        \"category\": \"string\",\n        \"state\": \"string\",\n        \"max_attempts\": 1,\n        \"type\": \"standard\",\n        \"type_data\": {\n            \"id\": \"standard\",\n            \"name\": \"standard\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            },\n            \"scripts\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            }\n        }\n    }\n}\n</code></pre> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"string\",\n        \"value\": 1,\n        \"initial\": 1,\n        \"decay\": 1,\n        \"minimum\": 1,\n        \"function\": \"string\",\n        \"description\": \"string\",\n        \"connection_info\": \"string\",\n        \"next_id\": 1,\n        \"category\": \"string\",\n        \"state\": \"string\",\n        \"max_attempts\": 1,\n        \"type\": \"dynamic\",\n        \"type_data\": {\n            \"id\": \"dynamic\",\n            \"name\": \"dynamic\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            },\n            \"scripts\": {\n                \"create\": \"string\",\n                \"update\": \"string\",\n                \"view\": \"string\"\n            }\n        }\n    }\n}\n</code></pre> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_5","title":"Return Values","text":"Standard ChallengesDynamic Challenges Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>type_data</code> <code>dict[str, Any]</code> The data associated with the challenge type. Used internally by the frontend Name Type Description <code>id</code> <code>int</code> The ID of the challenge <code>name</code> <code>string</code> The name of the challenge <code>value</code> <code>int</code> The value of the challenge <code>initial</code> <code>int</code> The initial value of the challenge <code>decay</code> <code>int</code> The decay rate of the challenge <code>minimum</code> <code>int</code> The minimum value of the challenge <code>function</code> <code>string</code> The function used to calculate the value of the challenge. Possible values are <code>\"logarithmic\"</code> and <code>\"linear\"</code> <code>description</code> <code>string</code> The description of the challenge <code>connection_info</code> <code>string</code> The connection information of the challenge <code>next_id</code> <code>int</code> The ID of the next challenge <code>category</code> <code>string</code> The category of the challenge <code>state</code> <code>string</code> The state of the challenge. Possible values are <code>\"visible\"</code>, <code>\"hidden\"</code>, and <code>\"locked\"</code> <code>max_attempts</code> <code>int</code> The maximum number of attempts for the challenge <code>type</code> <code>string</code> The type of the challenge. Possible values are <code>\"standard\"</code> and <code>\"dynamic\"</code> <code>type_data</code> <code>dict[str, Any]</code> The data associated with the challenge type. Used internally by the frontend"},{"location":"endpoints/challenges/#delete-challengeschallenge_id","title":"<code>DELETE /challenges/{challenge_id}</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to delete a challenge by ID.</p>"},{"location":"endpoints/challenges/#response_6","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The challenge was successfully deleted</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_6","title":"Return Values","text":"<p>None</p>"},{"location":"endpoints/challenges/#get-challengeschallenge_idfiles","title":"<code>GET /challenges/{challenge_id}/files</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to get the files associated with a challenge by ID.</p>"},{"location":"endpoints/challenges/#response_7","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The files were successfully retrieved</p> <ul> <li><code>list[</code><code>ChallengeFileResponse</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"challenge\",\n            \"location\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_7","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the file <code>type</code> <code>string</code> The type of the file, can only be <code>\"challenge\"</code> <code>location</code> <code>string</code> The location of the file"},{"location":"endpoints/challenges/#get-challengeschallenge_idflags","title":"<code>GET /challenges/{challenge_id}/flags</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to get the flags associated with a challenge by ID.</p>"},{"location":"endpoints/challenges/#response_8","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The flags were successfully retrieved</p> <ul> <li><code>list[</code><code>Flag</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"challenge_id\": 1,\n            \"type\": \"string\",\n            \"content\": \"string\",\n            \"data\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_8","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the flag <code>challenge_id</code> <code>int</code> The ID of the challenge the flag is for <code>type</code> <code>string</code> The type of the flag, can be either <code>\"static\"</code> or <code>\"regex\"</code> <code>content</code> <code>string</code> The content of the flag <code>data</code> <code>string</code> The data of the flag, seems to only be used for the flag's case-insensitivity, can be either <code>\"case_insensitive\"</code> or <code>\"\"</code>"},{"location":"endpoints/challenges/#get-challengeschallenge_idhints","title":"<code>GET /challenges/{challenge_id}/hints</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to get the hints associated with a challenge by ID.</p>"},{"location":"endpoints/challenges/#response_9","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The hints were successfully retrieved</p> <ul> <li><code>list[</code><code>Hint</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"string\",\n            \"challenge\": 1,\n            \"challenge_id\": 1,\n            \"content\": \"string\",\n            \"html\": \"string\",\n            \"cost\": 1,\n            \"requirements\": {\n                \"prerequisites\": [\n                    1\n                ]\n            }\n        }\n    ]\n}\n```json\n{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"cost\": 1\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_9","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>html</code> <code>string</code> The HTML content of the hint <code>cost</code> <code>int</code> The cost of the hint <code>requirements</code> <code>dict</code> The hint's requirements. This dictionary has a single item, <code>prerequisites</code>, which is a list of hint IDs required to unlock before this one. (Optional)"},{"location":"endpoints/challenges/#get-challengeschallenge_idrequirements","title":"<code>GET /challenges/{challenge_id}/requirements</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to get the requirements associated with a challenge by ID.</p>"},{"location":"endpoints/challenges/#response_10","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The requirements were successfully retrieved</p> <ul> <li><code>ChallengeRequirements</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"prerequisites\": [\n            1\n        ],\n        \"anonymize\": false\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_10","title":"Return Values","text":"Name Type Description <code>prerequisites</code> <code>list[int]</code> A list of prerequisite challenge IDs <code>anonymize</code> <code>bool</code> Whether or not to anonymize the challenge"},{"location":"endpoints/challenges/#get-challengeschallenge_idsolves","title":"<code>GET /challenges/{challenge_id}/solves</code>","text":"<p>Endpoint to get the solves associated with a challenge by ID.</p>"},{"location":"endpoints/challenges/#query-parameters_1","title":"Query Parameters","text":"<p>| Name | Type | Description | | <code>preview</code> | bool | If the CTF is currently frozen, the user is an admin, and this is set to <code>True</code>, the response will only contain the solves prior to the freeze time. |</p>"},{"location":"endpoints/challenges/#response_11","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The solves were successfully retrieved</p> <ul> <li><code>list[</code><code>ChallengeSolvesResponse</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"account_id\": 1,\n            \"name\": \"string\",\n            \"date\": \"string\",\n            \"account_url\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_11","title":"Return Values","text":"Name Type Description <code>account_id</code> <code>int</code> The ID of the account that solved the challenge <code>name</code> <code>string</code> The name of the account that solved the challenge <code>date</code> <code>string</code> The date the challenge was solved <code>account_url</code> <code>string</code> The URL of the account that solved the challenge"},{"location":"endpoints/challenges/#get-challengeschallenge_idtags","title":"<code>GET /challenges/{challenge_id}/tags</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to get the tags associated with a challenge by ID.</p>"},{"location":"endpoints/challenges/#response_12","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The tags were successfully retrieved</p> <ul> <li><code>list[</code><code>Tag</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"challenge_id\": 1,\n            \"value\": \"string\"\n        }\n    ]\n}`\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_12","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the tag <code>challenge_id</code> <code>int</code> The ID of the challenge <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/challenges/#get-challengeschallenge_idtopics","title":"<code>GET /challenges/{challenge_id}/topics</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to get the topics associated with a challenge by ID.</p>"},{"location":"endpoints/challenges/#response_13","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The topics were successfully retrieved</p> <ul> <li><code>list[</code><code>ChallengeTopicResponse</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"challenge_id\": 1,\n            \"topic_id\": 1,\n            \"value\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The challenge was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/challenges/#return-values_13","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the challenge-topic association <code>challenge_id</code> <code>int</code> The ID of the challenge <code>topic_id</code> <code>int</code> The ID of the topic <code>value</code> <code>string</code> The value of the topic"},{"location":"endpoints/comments/","title":"Comments Endpoints","text":"<p>CTFd Version: <code>3.7.0</code></p> <p>Last Updated: 30/3/2024</p>"},{"location":"endpoints/comments/#models","title":"Models","text":"<ul> <li><code>Comment</code> Model</li> <li><code>ChallengeComment</code> Model</li> <li><code>UserComment</code> Model</li> <li><code>TeamComment</code> Model</li> <li><code>PageComment</code> Model</li> </ul>"},{"location":"endpoints/comments/#endpoints","title":"Endpoints","text":"<ul> <li><code>GET /comments</code></li> <li><code>POST /comments</code></li> <li><code>DELETE /comments/{comment_id}</code></li> </ul>"},{"location":"endpoints/comments/#comment-model","title":"<code>Comment</code> Model","text":"<p>Represents a comment in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"standard\",\n    \"content\": \"string\",\n    \"date\": \"string\",\n    \"author_id\": 1,\n    \"author\": {\n        \"name\": \"string\"\n    },\n    \"html\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the comment <code>type</code> <code>string</code> The type of the comment. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code>, <code>\"user\"</code>, <code>\"team\"</code>, <code>\"page\"</code> <code>content</code> <code>string</code> The content of the comment <code>date</code> <code>string</code> The date the comment was created in ISO 8601 format <code>author_id</code> <code>int</code> The ID of the author of the comment <code>author</code> <code>dict</code> The author of the comment <code>html</code> <code>string</code> The HTML content of the comment"},{"location":"endpoints/comments/#challengecomment-model","title":"<code>ChallengeComment</code> Model","text":"<p>Represents a comment for a challenge in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"challenge\",\n    \"content\": \"string\",\n    \"date\": \"string\",\n    \"author_id\": 1,\n    \"author\": {\n        \"name\": \"string\"\n    },\n    \"html\": \"string\",\n    \"challenge_id\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the comment <code>type</code> <code>string</code> The type of the comment. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code>, <code>\"user\"</code>, <code>\"team\"</code>, <code>\"page\"</code> <code>content</code> <code>string</code> The content of the comment <code>date</code> <code>string</code> The date the comment was created in ISO 8601 format <code>author_id</code> <code>int</code> The ID of the author of the comment <code>author</code> <code>dict</code> The author of the comment <code>html</code> <code>string</code> The HTML content of the comment <code>challenge_id</code> <code>int</code> The ID of the challenge the comment is associated with"},{"location":"endpoints/comments/#usercomment-model","title":"<code>UserComment</code> Model","text":"<p>Represents a comment for a user in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"user\",\n    \"content\": \"string\",\n    \"date\": \"string\",\n    \"author_id\": 1,\n    \"author\": {\n        \"name\": \"string\"\n    },\n    \"html\": \"string\",\n    \"user_id\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the comment <code>type</code> <code>string</code> The type of the comment. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code>, <code>\"user\"</code>, <code>\"team\"</code>, <code>\"page\"</code> <code>content</code> <code>string</code> The content of the comment <code>date</code> <code>string</code> The date the comment was created in ISO 8601 format <code>author_id</code> <code>int</code> The ID of the author of the comment <code>author</code> <code>dict</code> The author of the comment <code>html</code> <code>string</code> The HTML content of the comment <code>user_id</code> <code>int</code> The ID of the user the comment is associated with"},{"location":"endpoints/comments/#teamcomment-model","title":"<code>TeamComment</code> Model","text":"<p>Represents a comment for a team in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"team\",\n    \"content\": \"string\",\n    \"date\": \"string\",\n    \"author_id\": 1,\n    \"author\": {\n        \"name\": \"string\"\n    },\n    \"html\": \"string\",\n    \"team_id\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the comment <code>type</code> <code>string</code> The type of the comment. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code>, <code>\"user\"</code>, <code>\"team\"</code>, <code>\"page\"</code> <code>content</code> <code>string</code> The content of the comment <code>date</code> <code>string</code> The date the comment was created in ISO 8601 format <code>author_id</code> <code>int</code> The ID of the author of the comment <code>author</code> <code>dict</code> The author of the comment <code>html</code> <code>string</code> The HTML content of the comment <code>team_id</code> <code>int</code> The ID of the team the comment is associated with"},{"location":"endpoints/comments/#pagecomment-model","title":"<code>PageComment</code> Model","text":"<p>Represents a comment for a page in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"page\",\n    \"content\": \"string\",\n    \"date\": \"string\",\n    \"author_id\": 1,\n    \"author\": {\n        \"name\": \"string\"\n    },\n    \"html\": \"string\",\n    \"page_id\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the comment <code>type</code> <code>string</code> The type of the comment. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code>, <code>\"user\"</code>, <code>\"team\"</code>, <code>\"page\"</code> <code>content</code> <code>string</code> The content of the comment <code>date</code> <code>string</code> The date the comment was created in ISO 8601 format <code>author_id</code> <code>int</code> The ID of the author of the comment <code>author</code> <code>dict</code> The author of the comment <code>html</code> <code>string</code> The HTML content of the comment <code>page_id</code> <code>int</code> The ID of the page the comment is associated with"},{"location":"endpoints/comments/#get-comments","title":"<code>GET /comments</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get comments in bulk. Limited to 50 comments per request. Can be filtered by <code>challenge_id</code>, <code>user_id</code>, <code>team_id</code> and <code>page_id</code>.</p>"},{"location":"endpoints/comments/#query-parameters","title":"Query Parameters","text":"Name Type Description <code>challenge_id</code> <code>int</code> The ID of the challenge to get comments for <code>user_id</code> <code>int</code> The ID of the user to get comments for <code>team_id</code> <code>int</code> The ID of the team to get comments for <code>page_id</code> <code>int</code> The ID of the page to get comments for <code>q</code> <code>string</code> A search query to match against the given <code>field</code>. If this is specified, <code>field</code> must also be specified <code>field</code> <code>string</code> The field to search against, can be either only <code>content</code>. If this is specified, <code>q</code> must also be specified. <code>page</code> <code>int</code> The page number to retrieve. Defaults to 1"},{"location":"endpoints/comments/#response","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The comments were retrieved successfully</p> <ul> <li><code>list[</code><code>Comment</code><code>|</code><code>ChallengeComment</code><code>|</code><code>UserComment</code><code>|</code><code>TeamComment</code><code>|</code><code>PageComment</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"meta\": {\n        \"pagination\": {\n            \"page\": 1,\n            \"next\": 1,\n            \"prev\": 1,\n            \"pages\": 1,\n            \"per_page\": 50,\n            \"total\": 1\n        }\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"standard\",\n            \"content\": \"string\",\n            \"date\": \"string\",\n            \"author_id\": 1,\n            \"author\": {\n                \"name\": \"string\"\n            },\n            \"html\": \"string\"\n        },\n        {\n            \"id\": 1,\n            \"type\": \"challenge\",\n            \"content\": \"string\",\n            \"date\": \"string\",\n            \"author_id\": 1,\n            \"author\": {\n                \"name\": \"string\"\n            },\n            \"html\": \"string\",\n            \"challenge_id\": 1\n        },\n        {\n            \"id\": 1,\n            \"type\": \"user\",\n            \"content\": \"string\",\n            \"date\": \"string\",\n            \"author_id\": 1,\n            \"author\": {\n                \"name\": \"string\"\n            },\n            \"html\": \"string\",\n            \"user_id\": 1\n        },\n        {\n            \"id\": 1,\n            \"type\": \"team\",\n            \"content\": \"string\",\n            \"date\": \"string\",\n            \"author_id\": 1,\n            \"author\": {\n                \"name\": \"string\"\n            },\n            \"html\": \"string\",\n            \"team_id\": 1\n        },\n        {\n            \"id\": 1,\n            \"type\": \"page\",\n            \"content\": \"string\",\n            \"date\": \"string\",\n            \"author_id\": 1,\n            \"author\": {\n                \"name\": \"string\"\n            },\n            \"html\": \"string\",\n            \"page_id\": 1\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to view comments</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/comments/#return-values","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the comment <code>type</code> <code>string</code> The type of the comment. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code>, <code>\"user\"</code>, <code>\"team\"</code>, <code>\"page\"</code> <code>content</code> <code>string</code> The content of the comment <code>date</code> <code>string</code> The date the comment was created in ISO 8601 format <code>author_id</code> <code>int</code> The ID of the author of the comment <code>author</code> <code>dict</code> The author of the comment <code>html</code> <code>string</code> The HTML content of the comment <code>challenge_id</code> <code>int</code> The ID of the challenge the comment is associated with <code>user_id</code> <code>int</code> The ID of the user the comment is associated with <code>team_id</code> <code>int</code> The ID of the team the comment is associated with <code>page_id</code> <code>int</code> The ID of the page the comment is associated with"},{"location":"endpoints/comments/#post-comments","title":"<code>POST /comments</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to create a new comment.</p>"},{"location":"endpoints/comments/#json-parameters","title":"JSON Parameters","text":"<p>Note</p> <p>It is not possible to post a comment as another user by setting <code>author_id</code> to a different value. The <code>author_id</code> field is ignored and the comment is always created as the currently authenticated user.</p> Name Type Description <code>content</code> <code>string</code> The content of the comment <code>type</code> (Optional) <code>string</code> The type of the comment. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code>, <code>\"user\"</code>, <code>\"team\"</code>, <code>\"page\"</code> <code>author_id</code> (Optional) <code>int</code> The ID of the author of the comment <code>date</code> (Optional) <code>string</code> The date the comment was created in ISO 8601 format <code>challenge_id</code> (Optional) <code>int</code> The ID of the challenge to associate the comment with <code>user_id</code> (Optional) <code>int</code> The ID of the user to associate the comment with <code>team_id</code> (Optional) <code>int</code> The ID of the team to associate the comment with <code>page_id</code> (Optional) <code>int</code> The ID of the page to associate the comment with"},{"location":"endpoints/comments/#response_1","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The comment was created successfully</p> <ul> <li><code>Comment</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"standard\",\n        \"content\": \"string\",\n        \"date\": \"string\",\n        \"author_id\": 1,\n        \"author\": {\n            \"name\": \"string\"\n        },\n        \"html\": \"string\"\n    }\n}\n</code></pre></li> <li><code>ChallengeComment</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"challenge\",\n        \"content\": \"string\",\n        \"date\": \"string\",\n        \"author_id\": 1,\n        \"author\": {\n            \"name\": \"string\"\n        },\n        \"html\": \"string\",\n        \"challenge_id\": 1\n    }\n}\n</code></pre></li> <li><code>UserComment</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"user\",\n        \"content\": \"string\",\n        \"date\": \"string\",\n        \"author_id\": 1,\n        \"author\": {\n            \"name\": \"string\"\n        },\n        \"html\": \"string\",\n        \"user_id\": 1\n    }\n}\n</code></pre></li> <li><code>TeamComment</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"team\",\n        \"content\": \"string\",\n        \"date\": \"string\",\n        \"author_id\": 1,\n        \"author\": {\n            \"name\": \"string\"\n        },\n        \"html\": \"string\",\n        \"team_id\": 1\n    }\n}\n</code></pre></li> <li><code>PageComment</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"page\",\n        \"content\": \"string\",\n        \"date\": \"string\",\n        \"author_id\": 1,\n        \"author\": {\n            \"name\": \"string\"\n        },\n        \"html\": \"string\",\n        \"page_id\": 1\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/comments/#return-values_1","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the comment <code>type</code> <code>string</code> The type of the comment. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code>, <code>\"user\"</code>, <code>\"team\"</code>, <code>\"page\"</code> <code>content</code> <code>string</code> The content of the comment <code>date</code> <code>string</code> The date the comment was created in ISO 8601 format <code>author_id</code> <code>int</code> The ID of the author of the comment <code>author</code> <code>dict</code> The author of the comment <code>html</code> <code>string</code> The HTML content of the comment <code>challenge_id</code> <code>int</code> The ID of the challenge the comment is associated with <code>user_id</code> <code>int</code> The ID of the user the comment is associated with <code>team_id</code> <code>int</code> The ID of the team the comment is associated with <code>page_id</code> <code>int</code> The ID of the page the comment is associated with"},{"location":"endpoints/comments/#delete-commentscomment_id","title":"<code>DELETE /comments/{comment_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to delete a <code>Comment</code>.</p>"},{"location":"endpoints/comments/#response_2","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The comment was deleted successfully</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The comment with the specified <code>comment_id</code> does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/files/","title":"Files Endpoints","text":"<p>CTFd Version: <code>3.7.0</code></p> <p>Last Updated: 30/3/2024</p>"},{"location":"endpoints/files/#models","title":"Models","text":"<ul> <li><code>File</code> Model</li> </ul>"},{"location":"endpoints/files/#endpoints","title":"Endpoints","text":"<ul> <li><code>GET /files</code></li> <li><code>POST /files</code></li> <li><code>GET /files/{file_id}</code></li> <li><code>DELETE /files/{file_id}</code></li> </ul>"},{"location":"endpoints/files/#file-model","title":"<code>File</code> Model","text":"<p>Represents a file in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"string\",\n    \"location\": \"string\",\n    \"sha1sum\": \"string\",\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the file <code>type</code> <code>string</code> The type of the file. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code> and <code>\"page\"</code> <code>location</code> <code>string</code> The location of the file <code>sha1sum</code> <code>string</code> The SHA1 checksum of the file"},{"location":"endpoints/files/#challengefile-model","title":"<code>ChallengeFile</code> Model","text":"<p>Represents a file associated with a challenge in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"challenge\",\n    \"location\": \"string\",\n    \"sha1sum\": \"string\",\n    \"challenge_id\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the file <code>type</code> <code>string</code> The type of the file. Has to be set to <code>\"challenge\"</code> <code>location</code> <code>string</code> The location of the file <code>sha1sum</code> <code>string</code> The SHA1 checksum of the file <code>challenge_id</code> <code>int</code> The ID of the challenge that the file is associated with"},{"location":"endpoints/files/#pagefile-model","title":"<code>PageFile</code> Model","text":"<p>Represents a file associated with a page in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"page\",\n    \"location\": \"string\",\n    \"sha1sum\": \"string\",\n    \"page_id\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the file <code>type</code> <code>string</code> The type of the file. Has to be set to <code>\"page\"</code> <code>location</code> <code>string</code> The location of the file <code>sha1sum</code> <code>string</code> The SHA1 checksum of the file <code>page_id</code> <code>int</code> The ID of the page that the file is associated with"},{"location":"endpoints/files/#get-files","title":"<code>GET /files</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get all files in bulk. Can be filtered by <code>type</code> and <code>location</code>.</p>"},{"location":"endpoints/files/#query-parameters","title":"Query Parameters","text":"Name Type Description <code>type</code> <code>string</code> The type of the file to filter by. Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code> and <code>\"page\"</code> <code>location</code> <code>string</code> The location of the file to filter by <code>q</code> <code>string</code> A search query to match against the given <code>field</code>. If this is specified, <code>field</code> must also be specified <code>field</code> <code>string</code> The field to search against, can be either <code>type</code> or <code>location</code>. If this is specified, <code>q</code> must also be specified."},{"location":"endpoints/files/#response","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The files were retrieved successfully</p> <ul> <li><code>list[</code><code>File</code><code>|</code><code>ChallengeFile</code><code>|</code><code>PageFile</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"string\",\n            \"location\": \"string\",\n            \"sha1sum\": \"string\",\n        },\n        {\n            \"id\": 1,\n            \"type\": \"challenge\",\n            \"location\": \"string\",\n            \"sha1sum\": \"string\",\n            \"challenge_id\": 1\n        },\n        {\n            \"id\": 1,\n            \"type\": \"page\",\n            \"location\": \"string\",\n            \"sha1sum\": \"string\",\n            \"page_id\": 1\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/files/#post-files","title":"<code>POST /files</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to create a new file.</p>"},{"location":"endpoints/files/#multipart-form-parameters","title":"Multipart Form Parameters","text":"Fun Fact <p>This is the only endpoint that accepts multipart form data when using an API key for authentication. In fact, there is logic in the source code written specifically for this endpoint. CTFd/utils/initialization/__init__.py<pre><code>    @app.before_request\n    def tokens():\n        token = request.headers.get(\"Authorization\")\n        if token and (\n            request.mimetype == \"application/json\"\n            # Specially allow multipart/form-data for file uploads\n            or (\n                request.endpoint == \"api.files_files_list\"\n                and request.method == \"POST\"\n                and request.mimetype == \"multipart/form-data\"\n            )\n        ):\n            ...\n</code></pre></p> <p>Warning</p> <p>If the <code>location</code> field is set to a path where a file already exists, the existing file will be overwritten. </p> Field Name Description <code>file</code> The file(s) to upload. This can be specified multiple times to upload multiple files. <code>challenge_id</code> (Optional) The ID of the challenge to associate the file(s) with. This is required if the file is a challenge file. If both <code>challenge_id</code> and <code>challenge</code> is specified, <code>challenge_id</code> will be used. <code>challenge</code> (Optional) The ID of the challenge to associate the file(s) with. This is required if the file is a challenge file. If both <code>challenge_id</code> and <code>challenge</code> is specified, <code>challenge_id</code> will be used. <code>page_id</code> (Optional) The ID of the page(s) to associate the file with. This is required if the file is a page file. If both <code>page_id</code> and <code>page</code> is specified, <code>page_id</code> will be used. <code>page</code> (Optional) The ID of the page to associate the file(s) with. This is required if the file is a page file. If both <code>page_id</code> and <code>page</code> is specified, <code>page_id</code> will be used. <code>type</code> (Optional) The type of the file(s). Possible values are <code>\"standard\"</code>, <code>\"challenge\"</code> and <code>\"page\"</code>. Defaults to <code>\"standard\"</code> <code>location</code> The location of the file. If multiple files are specified, this field cannot be set."},{"location":"endpoints/files/#response_1","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The file was created successfully</p> <ul> <li><code>list[</code><code>File</code><code>|</code><code>ChallengeFile</code><code>|</code><code>PageFile</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"string\",\n            \"location\": \"string\",\n            \"sha1sum\": \"string\",\n        },\n        {\n            \"id\": 1,\n            \"type\": \"challenge\",\n            \"location\": \"string\",\n            \"sha1sum\": \"string\",\n            \"challenge_id\": 1\n        },\n        {\n            \"id\": 1,\n            \"type\": \"page\",\n            \"location\": \"string\",\n            \"sha1sum\": \"string\",\n            \"page_id\": 1\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/files/#get-filesfile_id","title":"<code>GET /files/{file_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get a specific file.</p>"},{"location":"endpoints/files/#response_2","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The file was retrieved successfully</p> <ul> <li><code>File</code> | <code>ChallengeFile</code> | <code>PageFile</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"string\",\n        \"location\": \"string\",\n        \"sha1sum\": \"string\",\n    }\n}\n</code></pre> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"challenge\",\n        \"location\": \"string\",\n        \"sha1sum\": \"string\",\n        \"challenge_id\": 1\n    }\n}\n</code></pre> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"page\",\n        \"location\": \"string\",\n        \"sha1sum\": \"string\",\n        \"page_id\": 1\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The file does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/files/#delete-filesfile_id","title":"<code>DELETE /files/{file_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to delete a specific file.</p>"},{"location":"endpoints/files/#response_3","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The file was deleted successfully</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The file does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/flags/","title":"Flags Endpoints","text":"<p>CTFd Version: <code>3.7.0</code></p> <p>Last Updated: 30/3/2024</p>"},{"location":"endpoints/flags/#models","title":"Models","text":"<ul> <li><code>Flag</code> Model</li> <li><code>FlagType</code> Model</li> </ul>"},{"location":"endpoints/flags/#endpoints","title":"Endpoints","text":"<ul> <li><code>GET /flags</code></li> <li><code>POST /flags</code></li> <li><code>GET /flags/types</code></li> <li><code>GET /flags/types/{type_name}</code></li> <li><code>GET /flags/{flag_id}</code></li> <li><code>PATCH /flags/{flag_id}</code></li> <li><code>DELETE /flags/{flag_id}</code></li> </ul>"},{"location":"endpoints/flags/#flag-model","title":"<code>Flag</code> Model","text":"<p>Represents a flag in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"challenge_id\": 1,\n    \"type\": \"string\",\n    \"content\": \"string\",\n    \"data\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the flag <code>challenge_id</code> <code>int</code> The ID of the challenge the flag is for <code>type</code> <code>string</code> The type of the flag, can be either <code>\"static\"</code> or <code>\"regex\"</code> <code>content</code> <code>string</code> The content of the flag <code>data</code> <code>string</code> The data of the flag, seems to only be used for the flag's case-insensitivity, can be either <code>\"case_insensitive\"</code> or <code>\"\"</code>"},{"location":"endpoints/flags/#flagtype-model","title":"<code>FlagType</code> Model","text":"<pre><code>{\n    \"name\": \"string\",\n    \"templates\": {\n        \"create\": \"string\",\n        \"update\": \"string\"\n    }\n}\n</code></pre> Name Type Description <code>name</code> <code>string</code> The name of the flag type <code>templates</code> <code>dict</code> The templates for creating and updating flags of this type"},{"location":"endpoints/flags/#get-flags","title":"<code>GET /flags</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get all flags in bulk. Can be filtered by <code>challenge_id</code>, flag <code>type</code>, flag <code>content</code>, and flag <code>data</code>.</p>"},{"location":"endpoints/flags/#query-parameters","title":"Query Parameters","text":"Name Type Description <code>challenge_id</code> <code>int</code> The ID of the challenge to get flags for <code>type</code> <code>string</code> The type of flag to get <code>content</code> <code>string</code> The content of the flag to match <code>data</code> <code>string</code> The data of the flag to match, seems to only be used for the flag's case-insensitivity, possible values are <code>case_insensitive</code> or a blank string <code>q</code> <code>string</code> A search query to match against the given <code>field</code>. If this is specified, <code>field</code> must also be specified <code>field</code> <code>string</code> The field to search against, can be either <code>type</code>, <code>content</code> or <code>data</code>. If this is specified, <code>q</code> must also be specified."},{"location":"endpoints/flags/#response","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The flags were successfully retrieved</p> <ul> <li><code>list[</code><code>Flag</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"challenge_id\": 1,\n            \"type\": \"string\",\n            \"content\": \"string\",\n            \"data\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/flags/#return-values","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the flag <code>challenge_id</code> <code>int</code> The ID of the challenge the flag is for <code>type</code> <code>string</code> The type of the flag, can be either <code>\"static\"</code> or <code>\"regex\"</code> <code>content</code> <code>string</code> The content of the flag <code>data</code> <code>string</code> The data of the flag, seems to only be used for the flag's case-insensitivity, can be either <code>\"case_insensitive\"</code> or <code>\"\"</code>"},{"location":"endpoints/flags/#post-flags","title":"<code>POST /flags</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to create a new flag.</p>"},{"location":"endpoints/flags/#json-parameters","title":"JSON Parameters","text":"Name Type Description <code>challenge_id</code> <code>int</code> The ID of the challenge the flag is for <code>type</code> <code>string</code> The type of the flag, can be either <code>\"static\"</code> or <code>\"regex\"</code> <code>content</code> <code>string</code> The content of the flag <code>data</code> <code>string</code> The data of the flag, seems to only be used for the flag's case-insensitivity, can be either <code>\"case_insensitive\"</code> or <code>\"\"</code>"},{"location":"endpoints/flags/#response_1","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The flag was successfully created</p> <ul> <li><code>Flag</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"challenge_id\": 1,\n        \"type\": \"string\",\n        \"content\": \"string\",\n        \"data\": \"string\"\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/flags/#return-values_1","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the flag <code>challenge_id</code> <code>int</code> The ID of the challenge the flag is for <code>type</code> <code>string</code> The type of the flag, can be either <code>\"static\"</code> or <code>\"regex\"</code> <code>content</code> <code>string</code> The content of the flag <code>data</code> <code>string</code> The data of the flag, seems to only be used for the flag's case-insensitivity, can be either <code>\"case_insensitive\"</code> or <code>\"\"</code>"},{"location":"endpoints/flags/#get-flagstypes","title":"<code>GET /flags/types</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get all flag types.</p>"},{"location":"endpoints/flags/#response_2","title":"Response","text":"<ul> <li><code>200 OK</code> - The flag types were successfully retrieved<ul> <li><code>dict[str,</code><code>FlagType</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"string\": {\n            \"name\": \"string\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\"\n            }\n        }\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/flags/#return-values_2","title":"Return Values","text":"Name Type Description <code>name</code> <code>string</code> The name of the flag type <code>templates</code> <code>dict</code> The templates for creating and updating flags of this type"},{"location":"endpoints/flags/#get-flagstypestype_name","title":"<code>GET /flags/types/{type_name}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get a specific flag type.</p>"},{"location":"endpoints/flags/#response_3","title":"Response","text":"<ul> <li><code>200 OK</code> - The flag type was successfully retrieved<ul> <li><code>dict[str,</code><code>FlagType</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"string\": {\n            \"name\": \"string\",\n            \"templates\": {\n                \"create\": \"string\",\n                \"update\": \"string\"\n            }\n        }\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/flags/#return-values_3","title":"Return Values","text":"Name Type Description <code>name</code> <code>string</code> The name of the flag type <code>templates</code> <code>dict</code> The templates for creating and updating flags of this type"},{"location":"endpoints/flags/#get-flagsflag_id","title":"<code>GET /flags/{flag_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get a specific flag.</p>"},{"location":"endpoints/flags/#response_4","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The flag was successfully retrieved</p> <ul> <li><code>Flag</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"challenge_id\": 1,\n        \"type\": \"string\",\n        \"content\": \"string\",\n        \"data\": \"string\",\n        \"templates\": {\n            \"create\": \"string\",\n            \"update\": \"string\"\n        }\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The flag with the given ID does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/flags/#return-values_4","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the flag <code>challenge_id</code> <code>int</code> The ID of the challenge the flag is for <code>type</code> <code>string</code> The type of the flag, can be either <code>\"static\"</code> or <code>\"regex\"</code> <code>content</code> <code>string</code> The content of the flag <code>data</code> <code>string</code> The data of the flag, seems to only be used for the flag's case-insensitivity, can be either <code>\"case_insensitive\"</code> or <code>\"\"</code> <code>templates</code> <code>dict</code> The templates for creating and updating flags of this type"},{"location":"endpoints/flags/#patch-flagsflag_id","title":"<code>PATCH /flags/{flag_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to update a specific flag.</p>"},{"location":"endpoints/flags/#json-parameters_1","title":"JSON Parameters","text":"Name Type Description <code>challenge_id</code> <code>int</code> The ID of the challenge the flag is for <code>type</code> <code>string</code> The type of the flag, can be either <code>\"static\"</code> or <code>\"regex\"</code> <code>content</code> <code>string</code> The content of the flag <code>data</code> <code>string</code> The data of the flag, seems to only be used for the flag's case-insensitivity, can be either <code>\"case_insensitive\"</code> or <code>\"\"</code>"},{"location":"endpoints/flags/#response_5","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The flag was successfully updated</p> <ul> <li><code>Flag</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"challenge_id\": 1,\n        \"type\": \"string\",\n        \"content\": \"string\",\n        \"data\": \"string\"\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The flag with the given ID does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/flags/#return-values_5","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the flag <code>challenge_id</code> <code>int</code> The ID of the challenge the flag is for <code>type</code> <code>string</code> The type of the flag, can be either <code>\"static\"</code> or <code>\"regex\"</code> <code>content</code> <code>string</code> The content of the flag <code>data</code> <code>string</code> The data of the flag, seems to only be used for the flag's case-insensitivity, can be either <code>\"case_insensitive\"</code> or <code>\"\"</code>"},{"location":"endpoints/flags/#delete-flagsflag_id","title":"<code>DELETE /flags/{flag_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to delete a specific flag.</p>"},{"location":"endpoints/flags/#response_6","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The flag was successfully deleted</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The flag with the given ID does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/hints/","title":"Hints Endpoints","text":"<p>CTFd Version: <code>3.7.0</code></p> <p>Last Updated: 30/3/2024</p>"},{"location":"endpoints/hints/#models","title":"Models","text":"<ul> <li><code>Hint</code> Model</li> <li><code>LockedHint</code> Model</li> <li><code>UnlockedHint</code> Model</li> </ul>"},{"location":"endpoints/hints/#hint-model","title":"<code>Hint</code> Model","text":"<p>Represents a hint.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"string\",\n    \"challenge\": 1,\n    \"challenge_id\": 1,\n    \"content\": \"string\",\n    \"html\": \"string\",\n    \"cost\": 1,\n    \"requirements\": {\n        \"prerequisites\": [\n            1\n        ]\n    }\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>html</code> <code>string</code> The HTML content of the hint <code>cost</code> <code>int</code> The cost of the hint <code>requirements</code> <code>dict</code> The hint's requirements. This dictionary has a single item, <code>prerequisites</code>, which is a list of hint IDs required to unlock before this one. (Optional)"},{"location":"endpoints/hints/#lockedhint-model","title":"<code>LockedHint</code> Model","text":"<p>Represents a hint locked for the current user.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"string\",\n    \"challenge\": 1,\n    \"challenge_id\": 1,\n    \"cost\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>cost</code> <code>int</code> The cost of the hint"},{"location":"endpoints/hints/#unlockedhint-model","title":"<code>UnlockedHint</code> Model","text":"<p>Represents a hint unlocked for the current user.</p> <pre><code>{\n    \"id\": 1,\n    \"type\": \"string\",\n    \"challenge\": 1,\n    \"challenge_id\": 1,\n    \"content\": \"string\",\n    \"html\": \"string\",\n    \"cost\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>html</code> <code>string</code> The HTML content of the hint <code>cost</code> <code>int</code> The cost of the hint"},{"location":"endpoints/hints/#endpoints","title":"Endpoints","text":"<ul> <li><code>GET /hints</code></li> <li><code>POST /hints</code></li> <li><code>GET /hints/{hint_id}</code></li> <li><code>PATCH /hints/{hint_id}</code></li> <li><code>DELETE /hints/{hint_id}</code></li> </ul>"},{"location":"endpoints/hints/#get-hints","title":"<code>GET /hints</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to get hints in bulk. Can be filtered by <code>type</code>, <code>challenge_id</code>, <code>content</code> and <code>cost</code></p>"},{"location":"endpoints/hints/#query-parameters","title":"Query Parameters","text":"Name Type Description <code>type</code> <code>string</code> The type of hint to get, seems to always be <code>\"standard\"</code> <code>challenge_id</code> <code>int</code> The ID of the challenge to get hints for <code>content</code> <code>string</code> The content of the hint to match <code>cost</code> <code>int</code> The cost of the hint to match <code>q</code> <code>string</code> A search query to match against the given <code>field</code>. If this is specified, <code>field</code> must also be specified <code>field</code> <code>string</code> The field to search against, can be either <code>type</code> or <code>content</code>. If this is specified, <code>q</code> must also be specified."},{"location":"endpoints/hints/#response","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The hints were successfully retrieved</p> <ul> <li><code>list[</code><code>LockedHint</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"string\",\n            \"challenge\": 1,\n            \"challenge_id\": 1,\n            \"cost\": 1\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/hints/#return-values","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>cost</code> <code>int</code> The cost of the hint"},{"location":"endpoints/hints/#post-hints","title":"<code>POST /hints</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to create a new hint.</p>"},{"location":"endpoints/hints/#json-parameters","title":"JSON Parameters","text":"Name Type Description <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>cost</code> <code>int</code> The cost of the hint <code>requirements</code> (Optional) <code>dict</code> The hint's requirements. This dictionary has a single item, <code>prerequisites</code>, which is a list of hint IDs required to unlock before this one."},{"location":"endpoints/hints/#response_1","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The hint was successfully created</p> <ul> <li><code>Hint</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"string\",\n        \"challenge\": 1,\n        \"challenge_id\": 1,\n        \"content\": \"string\",\n        \"html\": \"string\",\n        \"cost\": 1,\n        \"requirements\": {\n            \"prerequisites\": [\n                1\n            ]\n        }\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/hints/#return-values_1","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>html</code> <code>string</code> The HTML content of the hint <code>cost</code> <code>int</code> The cost of the hint <code>requirements</code> <code>dict</code> The hint's requirements. This dictionary has a single item, <code>prerequisites</code>, which is a list of hint IDs required to unlock before this one. (Optional)"},{"location":"endpoints/hints/#get-hintshint_id","title":"<code>GET /hints/{hint_id}</code>","text":"<p>Endpoint to get a hint by its ID.</p>"},{"location":"endpoints/hints/#response_2","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The hint was successfully retrieved</p> HintLocked HintUnlocked Hint <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"string\",\n        \"challenge\": 1,\n        \"challenge_id\": 1,\n        \"content\": \"string\",\n        \"html\": \"string\",\n        \"cost\": 1,\n        \"requirements\": {\n            \"prerequisites\": [\n                1\n            ]\n        }\n    }\n}\n</code></pre> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"string\",\n        \"challenge\": 1,\n        \"challenge_id\": 1,\n        \"cost\": 1\n    }\n}\n</code></pre> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"string\",\n        \"challenge\": 1,\n        \"challenge_id\": 1,\n        \"content\": \"string\",\n        \"html\": \"string\",\n        \"cost\": 1\n    }\n}\n</code></pre> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to view that hint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        {}\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The hint was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/hints/#return-values_2","title":"Return Values","text":"HintLocked HintUnlocked Hint Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>html</code> <code>string</code> The HTML content of the hint <code>cost</code> <code>int</code> The cost of the hint <code>requirements</code> <code>dict</code> The hint's requirements. This dictionary has a single item, <code>prerequisites</code>, which is a list of hint IDs required to unlock before this one. (Optional) Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>cost</code> <code>int</code> The cost of the hint Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>html</code> <code>string</code> The HTML content of the hint <code>cost</code> <code>int</code> The cost of the hint"},{"location":"endpoints/hints/#patch-hintshint_id","title":"<code>PATCH /hints/{hint_id}</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to update a hint by its ID.</p>"},{"location":"endpoints/hints/#json-parameters_1","title":"JSON Parameters","text":"<p>Danger</p> <p>The effect of changing the values for <code>type</code> and <code>challenge_id</code> is unknown. Changing these values is not recommended.</p> Name Type Description <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>cost</code> <code>int</code> The cost of the hint <code>requirements</code> (Optional) <code>dict</code> The hint's requirements. This dictionary has a single item, <code>prerequisites</code>, which is a list of hint IDs required to unlock before this one."},{"location":"endpoints/hints/#response_3","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The hint was successfully updated</p> <ul> <li><code>Hint</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"string\",\n        \"challenge\": 1,\n        \"challenge_id\": 1,\n        \"content\": \"string\",\n        \"html\": \"string\",\n        \"cost\": 1,\n        \"requirements\": {\n            \"prerequisites\": [\n                1\n            ]\n        }\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The hint was not found</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/hints/#return-values_3","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the hint <code>type</code> <code>string</code> The type of the hint, seems to always be <code>\"standard\"</code> <code>challenge</code> <code>int</code> The ID of the challenge the hint is for (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The ID of the challenge the hint is for <code>content</code> <code>string</code> The content of the hint <code>html</code> <code>string</code> The HTML content of the hint <code>cost</code> <code>int</code> The cost of the hint <code>requirements</code> <code>dict</code> The hint's requirements. This dictionary has a single item, <code>prerequisites</code>, which is a list of hint IDs required to unlock before this one. (Optional)"},{"location":"endpoints/hints/#delete-hintshint_id","title":"<code>DELETE /hints/{hint_id}</code>","text":"<p>This endpoint is only accessible to admins.</p> <p>Endpoint to delete a hint by its ID.</p>"},{"location":"endpoints/hints/#response_4","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The hint was successfully deleted</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The hint with the given ID does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/tags/","title":"Tags Endpoints","text":"<p>CTFd Version: <code>3.7.0</code></p> <p>Last Updated: 30/3/2024</p>"},{"location":"endpoints/tags/#models","title":"Models","text":"<ul> <li><code>TagUserView</code> Model</li> <li><code>Tag</code> Model</li> </ul>"},{"location":"endpoints/tags/#endpoints","title":"Endpoints","text":"<ul> <li><code>GET /tags</code></li> <li><code>POST /tags</code></li> <li><code>GET /tags/{tag_id}</code></li> <li><code>PATCH /tags/{tag_id}</code></li> <li><code>DELETE /tags/{tag_id}</code></li> </ul>"},{"location":"endpoints/tags/#taguserview-model","title":"<code>TagUserView</code> Model","text":"<p>Represents a tag when viewed by a regular user.</p> <pre><code>{\n    \"value\": \"string\"\n}\n</code></pre> Name Type Description <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/tags/#tag-model","title":"<code>Tag</code> Model","text":"<p>Represents a tag in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"challenge\": 1,\n    \"challenge_id\": 1,\n    \"value\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the tag <code>challenge</code> <code>int</code> The challenge that the tag is associated with (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The challenge that the tag is associated with <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/tags/#get-tags","title":"<code>GET /tags</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get all tags in bulk. Can be filtered by <code>challenge_id</code> and <code>value</code>.</p>"},{"location":"endpoints/tags/#query-parameters","title":"Query Parameters","text":"Name Type Description <code>challenge_id</code> <code>int</code> The ID of the challenge to get tags for <code>value</code> <code>string</code> The value of the tag to filter by <code>q</code> <code>string</code> A search query to match against the given <code>field</code>. If this is specified, <code>field</code> must also be specified <code>field</code> <code>string</code> The field to search against, can be either <code>challenge_id</code> or <code>value</code>. If this is specified, <code>q</code> must also be specified."},{"location":"endpoints/tags/#response","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The tags were retrieved successfully</p> <ul> <li><code>list[</code><code>Tag</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"challenge\": 1,\n            \"challenge_id\": 1,\n            \"value\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to view tags</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/tags/#return-values","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the tag <code>challenge</code> <code>int</code> The challenge that the tag is associated with (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The challenge that the tag is associated with <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/tags/#post-tags","title":"<code>POST /tags</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to create a new tag.</p>"},{"location":"endpoints/tags/#json-parameters","title":"JSON Parameters","text":"Name Type Description <code>challenge_id</code> <code>int</code> The ID of the challenge to associate the tag with <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/tags/#response_1","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The tag was created successfully</p> <ul> <li><code>Tag</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"challenge\": 1,\n        \"challenge_id\": 1,\n        \"value\": \"string\"\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to create tags</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/tags/#return-values_1","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the tag <code>challenge</code> <code>int</code> The challenge that the tag is associated with (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The challenge that the tag is associated with <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/tags/#get-tagstag_id","title":"<code>GET /tags/{tag_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get a specific tag.</p>"},{"location":"endpoints/tags/#response_2","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The tag was retrieved successfully</p> <ul> <li><code>Tag</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"challenge\": 1,\n        \"challenge_id\": 1,\n        \"value\": \"string\"\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to view tags</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/tags/#return-values_2","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the tag <code>challenge</code> <code>int</code> The challenge that the tag is associated with (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The challenge that the tag is associated with <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/tags/#patch-tagstag_id","title":"<code>PATCH /tags/{tag_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to update a specific tag.</p>"},{"location":"endpoints/tags/#json-parameters_1","title":"JSON Parameters","text":"<p>Danger</p> <p>The effect of changing the <code>challenge_id</code> field is unknown. Changing this field is not recommended.</p> Name Type Description <code>challenge_id</code> <code>int</code> The ID of the challenge to associate the tag with <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/tags/#response_3","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The tag was updated successfully</p> <ul> <li><code>Tag</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"challenge\": 1,\n        \"challenge_id\": 1,\n        \"value\": \"string\"\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to update tags</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/tags/#return-values_3","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the tag <code>challenge</code> <code>int</code> The challenge that the tag is associated with (I'm not sure why this field exists) <code>challenge_id</code> <code>int</code> The challenge that the tag is associated with <code>value</code> <code>string</code> The value of the tag"},{"location":"endpoints/tags/#delete-tagstag_id","title":"<code>DELETE /tags/{tag_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to delete a specific tag.</p>"},{"location":"endpoints/tags/#response_4","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The tag was deleted successfully</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to delete tags</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/topics/","title":"Topics Endpoints","text":"<p>CTFd Version: <code>3.7.0</code></p> <p>Last Updated: 30/3/2024</p>"},{"location":"endpoints/topics/#models","title":"Models","text":"<ul> <li><code>Topic</code> Model</li> <li><code>ChallengeTopic</code> Model</li> </ul>"},{"location":"endpoints/topics/#endpoints","title":"Endpoints","text":"<ul> <li><code>GET /topics</code></li> <li><code>POST /topics</code></li> <li><code>DELETE /topics</code></li> <li><code>GET /topics/{topic_id}</code></li> <li><code>DELETE /topics/{topic_id}</code></li> </ul>"},{"location":"endpoints/topics/#topic-model","title":"<code>Topic</code> Model","text":"<p>Represents a topic in the CTFd database.</p> <pre><code>{\n    \"id\": 1,\n    \"value\": \"string\"\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the topic <code>value</code> <code>string</code> The value of the topic"},{"location":"endpoints/topics/#challengetopic-model","title":"<code>ChallengeTopic</code> Model","text":"<p>Represents a topic associated with a challenge in the CTFd database. This is essentially a reference between a <code>Topic</code> and a <code>Challenge</code>.</p> <pre><code>{\n    \"id\": 1,\n    \"challenge_id\": 1,\n    \"challenge\": 1,\n    \"topic_id\": 1,\n    \"topic\": 1\n}\n</code></pre> Name Type Description <code>id</code> <code>int</code> The ID of the challenge-topic association <code>challenge_id</code> <code>int</code> The ID of the challenge <code>challenge</code> <code>int</code> The ID of the challenge <code>topic_id</code> <code>int</code> The ID of the topic <code>topic</code> <code>int</code> The ID of the topic"},{"location":"endpoints/topics/#get-topics","title":"<code>GET /topics</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get topics in bulk. Can be filtered by <code>value</code>.</p>"},{"location":"endpoints/topics/#query-parameters","title":"Query Parameters","text":"Name Type Description <code>value</code> <code>string</code> The value of the topic to get topics for <code>q</code> <code>string</code> A search query to match against the given <code>field</code>. If this is specified, <code>field</code> must also be specified <code>field</code> <code>string</code> The field to search against, can only be set to <code>value</code>. If this is specified, <code>q</code> must also be specified."},{"location":"endpoints/topics/#response","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The topics were successfully retrieved</p> <ul> <li><code>list[</code><code>Topic</code><code>]</code> <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"value\": \"string\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code>     ```json     {         \"message\": \"string\"     }</li> </ul> </li> </ul>"},{"location":"endpoints/topics/#return-values","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the topic <code>value</code> <code>string</code> The value of the topic"},{"location":"endpoints/topics/#post-topics","title":"<code>POST /topics</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to create a new <code>Topic</code> and/or a <code>ChallengeTopic</code>.</p>"},{"location":"endpoints/topics/#json-parameters","title":"JSON Parameters","text":"<p>Info</p> <p>If <code>type</code> is not set to <code>\"challenge\"</code>, it will return a <code>400 Bad Request</code> response. However, if there is no topic with the specified <code>value</code>, a new topic will still be created.</p> Name Type Description <code>value</code> <code>string</code> The value of the topic to create. If a topic with the same value does not exist, a new <code>Topic</code> will be created <code>topic_id</code> <code>int</code> The ID of the topic to associate with a challenge. If <code>value</code> is specified, this field is ignored <code>type</code> <code>string</code> The type of the topic to create. Can only be <code>\"challenge\"</code>"},{"location":"endpoints/topics/#response_1","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The challenge topic was created successfully</p> <ul> <li><code>ChallengeTopic</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"challenge_id\": 1,\n        \"challenge\": 1,\n        \"topic_id\": 1,\n        \"topic\": 1\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li> <p><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ] // (1)!\n}\n</code></pre></p> <ol> <li>If a <code>Topic</code> is created but <code>type</code> is not set to <code>\"challenge\"</code>, the <code>errors</code> field will not exist</li> </ol> </li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to create topics</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The topic with the specified <code>topic_id</code> does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/topics/#return-values_1","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the challenge-topic association <code>challenge_id</code> <code>int</code> The ID of the challenge <code>challenge</code> <code>int</code> The ID of the challenge <code>topic_id</code> <code>int</code> The ID of the topic <code>topic</code> <code>int</code> The ID of the topic"},{"location":"endpoints/topics/#delete-topics","title":"<code>DELETE /topics</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to delete a <code>ChallengeTopic</code>.</p>"},{"location":"endpoints/topics/#query-parameters_1","title":"Query Parameters","text":"Name Type Description <code>type</code> <code>string</code> The type of the topic to delete. Can only be <code>\"challenge\"</code> <code>target_id</code> <code>int</code> The ID of the topic to delete."},{"location":"endpoints/topics/#response_2","title":"Response","text":"<ul> <li><code>200 OK</code> - The topic was deleted successfully<ul> <li><code>application/json</code> <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li> <p><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ] // (1)!\n}\n</code></pre></p> <ol> <li>If <code>type</code> is not set to <code>\"challenge\"</code>, the <code>errors</code> field will not exist</li> </ol> </li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to delete topics</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The topic with the specified <code>target_id</code> does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/topics/#get-topicstopic_id","title":"<code>GET /topics/{topic_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to get a specific topic.</p>"},{"location":"endpoints/topics/#response_3","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The topic was successfully retrieved</p> <ul> <li><code>Topic</code> <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"id\": 1,\n        \"value\": \"string\"\n    }\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You are not allowed to access this endpoint</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The topic with the specified <code>topic_id</code> does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"endpoints/topics/#return-values_2","title":"Return Values","text":"Name Type Description <code>id</code> <code>int</code> The ID of the topic <code>value</code> <code>string</code> The value of the topic"},{"location":"endpoints/topics/#delete-topicstopic_id","title":"<code>DELETE /topics/{topic_id}</code>","text":"<p>Note</p> <p>This endpoint is only accessible to admins.</p> <p>Endpoint to delete a <code>Topic</code>.</p>"},{"location":"endpoints/topics/#response_4","title":"Response","text":"<ul> <li> <p><code>200 OK</code> - The topic was deleted successfully</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul> </li> <li> <p><code>400 Bad Request</code> - An error occurred processing the provided or stored data</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"errors\": [\n        \"string\"\n    ]\n}\n</code></pre></li> </ul> </li> <li> <p><code>403 Forbidden</code> - You do not have the access to delete topics</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> <li> <p><code>404 Not Found</code> - The topic with the specified <code>topic_id</code> does not exist</p> <ul> <li><code>application/json</code> <pre><code>{\n    \"success\": false,\n    \"message\": \"string\"\n}\n</code></pre></li> </ul> </li> </ul>"}]}